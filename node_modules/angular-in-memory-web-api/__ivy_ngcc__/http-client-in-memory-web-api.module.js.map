{"version":3,"file":"http-client-in-memory-web-api.module.js","sources":["http-client-in-memory-web-api.module.ts"],"names":[],"mappings":"AAAA,mCAAmC;;AACnC;AAEmB;AAMlB;AAIiC;AAGT;AAGzB;AAjBA,OAAO,EAAE,QAAQ,EAA6B,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAE/D,OAAO,EAEL,qBAAqB,EACrB,iBAAiB,EAClB,MAAM,cAAc,CAAC;AAEtB,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;AAEzE,kEAAkE;AAClE,sCAAsC;AACtC,MAAM,UAAU,oCAAoC,CAClD,SAA4B,EAC5B,OAA8B,EAC9B,UAAsB;AACtB,IACA,IAAM,OAAO,GAAQ,IAAI,wBAAwB,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AACpF,IAAE,OAAO,OAAO,CAAC;AACjB,CAAC;AAGD;AAEc,IAFd;AAA4C,IAsC5C,CAAC;AACD,uCAvCa,8BAA8B;AAAE,IAC3C;AACF;AACE;AACE;AAEF;AAAM;AACE;AAEF;AAAM;AACE;AAGf;AAAM;AAAe;AACE;AAEH,MADjB;AACJ,IAAS,sCAAO,GAAd,UAAe,SAAkC,EAAE,OAAmC;AAAI,QACxF,OAAO;AACX,YAAM,QAAQ,EAAE,gCAA8B;AAC9C,YAAM,SAAS,EAAE;AACjB,gBAAQ,EAAE,OAAO,EAAE,iBAAiB,EAAG,QAAQ,EAAE,SAAS,EAAE;AAC5D,gBAAQ,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC7D,gBACQ,EAAE,OAAO,EAAE,WAAW;AAC9B,oBAAU,UAAU,EAAE,oCAAoC;AAC1D,oBAAU,IAAI,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,UAAU,CAAC,EAAC;AACvE,aAAO;AACP,SAAK,CAAC;AACN,IAAE,CAAC;AACF,IAAG;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAS,yCAAU,GAAjB,UAAkB,SAAkC,EAAE,OAAmC;AAAI,QAC3F,OAAO,gCAA8B,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACtE,IAAE,CAAC;AACF;IAtCY,8BAA8B,2DAD1C,QAAQ,CAAC,EAAE;AAAC,QACA,8BAA8B,CAsC1C;;;;gDACD;AAAC,IADD,qCAAC;AACA,CADA,AAtCD,IAsCC;AACD,SAvCa,8BAA8B;AAC1C","sourcesContent":["////// HttpClient-Only version ////\n\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\n\nimport {\n  InMemoryBackendConfigArgs,\n  InMemoryBackendConfig,\n  InMemoryDbService\n} from './interfaces';\n\nimport { HttpClientBackendService } from './http-client-backend.service';\n\n// Internal - Creates the in-mem backend for the HttpClient module\n// AoT requires factory to be exported\nexport function httpClientInMemBackendServiceFactory(\n  dbService: InMemoryDbService,\n  options: InMemoryBackendConfig,\n  xhrFactory: XhrFactory,\n): HttpBackend {\n  const backend: any = new HttpClientBackendService(dbService, options, xhrFactory);\n  return backend;\n}\n\n@NgModule({})\nexport class HttpClientInMemoryWebApiModule {\n  /**\n  *  Redirect the Angular `HttpClient` XHR calls\n  *  to in-memory data store that implements `InMemoryDbService`.\n  *  with class that implements InMemoryDbService and creates an in-memory database.\n  *\n  *  Usually imported in the root application module.\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n  *\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n  * @param {InMemoryBackendConfigArgs} [options]\n  *\n  * @example\n  * HttpInMemoryWebApiModule.forRoot(dbCreator);\n  * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n  */\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<HttpClientInMemoryWebApiModule> {\n    return {\n      ngModule: HttpClientInMemoryWebApiModule,\n      providers: [\n        { provide: InMemoryDbService,  useClass: dbCreator },\n        { provide: InMemoryBackendConfig, useValue: options },\n\n        { provide: HttpBackend,\n          useFactory: httpClientInMemBackendServiceFactory,\n          deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]}\n      ]\n    };\n  }\n    /**\n   *\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\n   * Same as `forRoot`.\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n   */\n  static forFeature(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<HttpClientInMemoryWebApiModule> {\n    return HttpClientInMemoryWebApiModule.forRoot(dbCreator, options);\n  }\n}\n"]}