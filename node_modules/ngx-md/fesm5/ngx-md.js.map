{"version":3,"file":"ngx-md.js.map","sources":["ng://ngx-md/lib/ngx-md.service.ts","ng://ngx-md/lib/ngx-md.component.ts","ng://ngx-md/lib/ngx-md.config.ts","ng://ngx-md/lib/ngx-md.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { throwError, Observable } from 'rxjs'\nimport { catchError, map } from 'rxjs/operators'\nimport { Renderer, setOptions, parse } from 'marked'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMdService {\n  private _renderer: any = new Renderer();\n  constructor(private _http:HttpClient) {\n    this.extendRenderer();\n    this.setMarkedOptions({});\n  }\n\n  // get the content from remote resource\n  getContent(path: string):Observable<any> {\n    return this._http.get(path, {responseType: 'text'}).pipe(map(res => res))\n      .pipe(catchError(this.handleError));\n  }\n\n  get renderer() {\n     return this._renderer;\n  }\n\n  setMarkedOptions(options: any) {\n    options = Object.assign({\n       gfm: true,\n       tables: true,\n       breaks: false,\n       pedantic: false,\n       sanitize: false,\n       smartLists: true,\n       smartypants: false\n    }, options);\n    options.renderer = this._renderer;\n     \n    setOptions(options);\n  }\n\n   // comple markdown to html\n  compile(data: string) {\n    return parse(data);\n  }\n\n   // handle error\n  private handleError(error: any): any {\n    let errMsg: string;\n    if (error instanceof fetch) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    return throwError(errMsg);\n  }\n\n   // extend marked render to support todo checkbox\n  private extendRenderer() {\n    this._renderer.listitem = function(text: string) {\n      if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\n      text = text\n        .replace(/^\\s*\\[ \\]\\s*/, '<input type=\"checkbox\" style=\" vertical-align: middle; margin: 0 0.2em 0.25em -1.6em; font-size: 16px; \" disabled> ')\n        .replace(/^\\s*\\[x\\]\\s*/, '<input type=\"checkbox\" style=\" vertical-align: middle; margin: 0 0.2em 0.25em -1.6em; font-size: 16px; \" checked disabled> ');\n          return '<li style=\"list-style: none\">' + text + '</li>';\n        } else {\n          return '<li>' + text + '</li>';\n        }\n    };\n  }\n}\n","import { Component, ElementRef, Input, PLATFORM_ID, Inject, AfterViewInit } from '@angular/core';\nimport { NgxMdService } from './ngx-md.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Prism from 'prismjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'ngx-md, markdown, [Markdown],[NgxMd]',\n    template: '<ng-content></ng-content>',\n    styles: [\n        `.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string {\n            background: none;\n        }`\n    ]\n})\nexport class NgxMdComponent implements AfterViewInit {\n    private _path: string;\n    private _data: string;\n    private _md: any;\n    private _ext: string;\n\n    constructor(\n        private _mdService: NgxMdService,\n        private _el: ElementRef,\n        @Inject(PLATFORM_ID) private _platformId: string\n    ) { }\n   \n\n    @Input()\n    set path(value: string) {\n      if (value) {\n        this._path = value;\n        this.onPathChange();\n      }\n    }\n\n    @Input()\n    set data(value: string) {\n      if (value) {\n        this._data = value;\n        this.onDataChange(value);\n      }\n    }\n\n    // on content change\n    ngAfterViewInit() {\n        this._md = this._mdService.compile(this._el.nativeElement.innerHTML)\n        this._el.nativeElement.innerHTML = this._mdService.compile(this._md);\n        this.highlightContent(false);\n    }\n\n    // on input\n    onDataChange(data: string) {\n      if (data) {\n          this._md = this.prepare(decodeHtml(data));\n          this._md = this._mdService.compile(data)\n        this._el.nativeElement.innerHTML = this._mdService.compile(this._md);\n      } else {\n        this._el.nativeElement.innerHTML = '';\n      }\n      this.highlightContent(false);\n    }\n\n    /**\n     * get remote conent;\n     */\n    onPathChange() {\n        this._ext = this._path && this._path.split('.').splice(-1).join();\n        this._mdService.getContent(this._path)\n            .subscribe(data => {\n                this._md = this._ext !== 'md' ? '```' + this._ext + '\\n' + data + '\\n```' : data;\n                this._el.nativeElement.innerHTML = this._mdService.compile(this.prepare(this._md));\n                this.highlightContent(false);\n            });\n    }\n\n    /**\n     * catch http error\n     */\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n    processRaw(data) {\n        this._md = this.prepare(decodeHtml(this._el.nativeElement.innerHTML));\n        this._el.nativeElement.innerHTML = this._mdService.compile(this._md);\n        this.highlightContent(false);\n    }\n\n\n    /**\n     * Prepare string\n     */\n    prepare(raw: string) {\n        if (!raw) return '';\n        if (this._ext === 'md' || !this.path) {\n            let isCodeBlock = false;\n            return raw.split('\\n').map((line: string) => {\n                if (this.trimLeft(line).substring(0, 3) === '```') {\n                    isCodeBlock = !isCodeBlock;\n                }\n                return isCodeBlock ? line : line.trim();\n            }).join('\\n');\n        }\n        return raw.replace(/\\\"/g, '\\'');\n    }\n\n    /**\n     * Trim left whitespace\n     */\n    private trimLeft(line: string) {\n        return line.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    /**\n     * Use Prism to highlight code snippets only on the browser\n     */\n    private highlightContent(async: boolean): void {\n      if (isPlatformBrowser(this._platformId)) {\n        Prism.highlightAll(async);\n      }\n    }\n}\n\nfunction decodeHtml(html: string) { // https://stackoverflow.com/a/7394787/588521\n    const txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgxMdConfig {\n  /** config modue */\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxMdComponent } from './ngx-md.component';\nimport { NgxMdService } from './ngx-md.service';\nimport { NgxMdConfig } from './ngx-md.config';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [NgxMdComponent],\n  providers: [NgxMdService],\n  exports: [NgxMdComponent]\n})\nexport class NgxMdModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxMdModule,\n      providers: [NgxMdConfig]\n    };\n  }\n}\n"],"names":["Prism.highlightAll"],"mappings":"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"}
