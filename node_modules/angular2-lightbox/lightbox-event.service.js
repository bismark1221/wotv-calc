"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Subject_1 = require("rxjs/Subject");
var LIGHTBOX_EVENT;
(function (LIGHTBOX_EVENT) {
    LIGHTBOX_EVENT[LIGHTBOX_EVENT["CHANGE_PAGE"] = 1] = "CHANGE_PAGE";
    LIGHTBOX_EVENT[LIGHTBOX_EVENT["CLOSE"] = 2] = "CLOSE";
    LIGHTBOX_EVENT[LIGHTBOX_EVENT["OPEN"] = 3] = "OPEN";
})(LIGHTBOX_EVENT = exports.LIGHTBOX_EVENT || (exports.LIGHTBOX_EVENT = {}));
;
var LightboxEvent = (function () {
    function LightboxEvent() {
        this._lightboxEventSource = new Subject_1.Subject();
        this.lightboxEvent$ = this._lightboxEventSource.asObservable();
    }
    LightboxEvent.prototype.broadcastLightboxEvent = function (event) {
        this._lightboxEventSource.next(event);
    };
    return LightboxEvent;
}());
LightboxEvent = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], LightboxEvent);
exports.LightboxEvent = LightboxEvent;
function getWindow() {
    return window;
}
var LightboxWindowRef = (function () {
    function LightboxWindowRef() {
    }
    Object.defineProperty(LightboxWindowRef.prototype, "nativeWindow", {
        get: function () {
            return getWindow();
        },
        enumerable: true,
        configurable: true
    });
    return LightboxWindowRef;
}());
LightboxWindowRef = __decorate([
    core_1.Injectable()
], LightboxWindowRef);
exports.LightboxWindowRef = LightboxWindowRef;
//# sourceMappingURL=lightbox-event.service.js.map