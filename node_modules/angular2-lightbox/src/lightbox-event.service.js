import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
export var LIGHTBOX_EVENT;
(function (LIGHTBOX_EVENT) {
    LIGHTBOX_EVENT[LIGHTBOX_EVENT["CHANGE_PAGE"] = 1] = "CHANGE_PAGE";
    LIGHTBOX_EVENT[LIGHTBOX_EVENT["CLOSE"] = 2] = "CLOSE";
    LIGHTBOX_EVENT[LIGHTBOX_EVENT["OPEN"] = 3] = "OPEN";
})(LIGHTBOX_EVENT || (LIGHTBOX_EVENT = {}));
;
var LightboxEvent = (function () {
    function LightboxEvent() {
        this._lightboxEventSource = new Subject();
        this.lightboxEvent$ = this._lightboxEventSource.asObservable();
    }
    LightboxEvent.prototype.broadcastLightboxEvent = function (event) {
        this._lightboxEventSource.next(event);
    };
    return LightboxEvent;
}());
export { LightboxEvent };
LightboxEvent.decorators = [
    { type: Injectable },
];
/** @nocollapse */
LightboxEvent.ctorParameters = function () { return []; };
function getWindow() {
    return window;
}
var LightboxWindowRef = (function () {
    function LightboxWindowRef() {
    }
    Object.defineProperty(LightboxWindowRef.prototype, "nativeWindow", {
        get: function () {
            return getWindow();
        },
        enumerable: true,
        configurable: true
    });
    return LightboxWindowRef;
}());
export { LightboxWindowRef };
LightboxWindowRef.decorators = [
    { type: Injectable },
];
/** @nocollapse */
LightboxWindowRef.ctorParameters = function () { return []; };
//# sourceMappingURL=lightbox-event.service.js.map