{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular-2-dropdown-multiselect/dropdown/search-filter.pipe.ts","ng://angular-2-dropdown-multiselect/dropdown/autofocus.directive.ts","ng://angular-2-dropdown-multiselect/dropdown/dropdown.component.ts","ng://angular-2-dropdown-multiselect/dropdown/off-click.directive.ts","ng://angular-2-dropdown-multiselect/dropdown/dropdown.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","MultiSelectSearchFilter","transform","options","str","limit","renderLimit","searchFunction","toLowerCase","this","_lastOptions","_searchCache","_searchCacheInclusive","_prevSkippedItems","filteredOpts","_doSearch","_limitRenderedItems","_getSubsetOptions","prevOptions","prevSearchStr","prevInclusiveOrIdx","concat","__spread","slice","prevStr","prevResults","prevResultShift","optsLength","maxFound","Math","min","regexp","founded","removedFromPrevResult","doesOptionMatch","option","test","name","getChildren","filter","child","parentId","id","getParent","find","parent","foundFn","item","notFoundFn","some","totalIterations","items","Pipe","args","AutofocusDirective","elemRef","defineProperty","nativeElement","ngOnInit","focus","ngOnChanges","changes","ssAutofocusChange","isFirstChange","ssAutofocus","element","Directive","selector","ElementRef","decorators","type","Host","Input","MULTISELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MultiselectDropdownComponent","multi","fb","searchFilter","differs","cdRef","control","_escapeRegExp","EventEmitter","filterControl","valueChanges","Subject","Set","closeOnClickOutside","pullRight","enableSearch","searchRenderLimit","searchRenderAfter","searchMaxLimit","searchMaxRenderedItems","checkedStyle","buttonClasses","containerClasses","selectionLimit","minSelectionLimit","closeOnSelect","autoUnselect","showCheckAll","showUncheckAll","fixedTitle","dynamicTitleMaxItems","maxHeight","isLazyLoad","stopScrollPropagation","loadViewDistance","selectAddedValues","ignoreLabels","maintainSelectionOrderInTitle","focusBack","checkAll","uncheckAll","checked","checkedPlural","searchPlaceholder","searchEmptyResult","searchNoRenderText","defaultTitle","allSelected","_","differ","create","settings","defaultSettings","texts","defaultTexts","_focusBack","clickedOutside","isVisible","dropdownClosed","emit","_isVisible","val","_workerDocClicked","searchLimit","getItemStyle","isLabel","disabled","getItemStyleSelectionDisabled","disabledSelection","cursor","_this","title","pipe","takeUntil","destroyed$","subscribe","updateRenderItems","load","parents","map","loadedValueIds","currentValue","previousValue","addedValues_1","indexOf","checkAllStatus","addChecks","checkAllSearchRegister","size","forEach","searchValue","applyFilters","updateTitle","fireModelChange","ngOnDestroy","renderItems","searchLimitApplied","filteredOptions","renderFilteredOptions","focusedItem","undefined","model","prevModel","onModelChange","onModelTouched","markForCheck","writeValue","Array","isArray","ngDoCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","diff","updateNumSelected","validate","_c","required","valid","selection","registerOnValidatorChange","_fn","Error","clearSearch","event","maybeStopPropagation","setValue","toggleDropdown","dropdownOpened","closeDropdown","isSelected","setSelected","_event","setTimeout","maybePreventDefault","index","isAtSelectionLimit","removeItem","idx","splice","onRemoved","lazyLoadOptions","numSelected","parentIndex","selectionLimitReached","addItem_1","onAdded","every","numSelectedOptions","displayAllSelectedText","useOptions_1","titleSelections","optionIds_1","selectOption","selectedId","optionIndex","join","searchFilterApplied","checkedOptions","add","clear","unCheckedOptions_1","has","delete","searchTerm","filterOptions","preventCheckboxCheck","isCheckboxDisabled","checkScrollPosition","ev","scrollTop","target","scrollHeight","scrollElementHeight","clientHeight","checkScrollPropagation","deltaY","window","returnValue","trackById","onLazyLoad","checkAllSearches","focusItem","dir","nextIdx","newIdx","preventDefault","stopPropagation","regExpStr","replace","RegExp","Component","template","providers","changeDetection","ChangeDetectionStrategy","OnPush","FormBuilder","IterableDiffers","ChangeDetectorRef","Output","OffClickDirective","onClick","_clickEvent","onTouch","_touchEvent","onDocumentClick","onOffClick","onDocumentTouch","HostListener","MultiselectDropdownModule","NgModule","imports","CommonModule","ReactiveFormsModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { IMultiSelectOption } from './types';\n\ninterface StringHashMap<T> {\n  [k: string]: T;\n}\n\n@Pipe({\n  name: 'searchFilter'\n})\nexport class MultiSelectSearchFilter implements PipeTransform {\n\n  private _lastOptions: IMultiSelectOption[];\n  private _searchCache: StringHashMap<IMultiSelectOption[]> = {};\n  private _searchCacheInclusive: StringHashMap<boolean | number> = {};\n  private _prevSkippedItems: StringHashMap<number> = {};\n\n  transform(\n    options: IMultiSelectOption[],\n    str = '',\n    limit = 0,\n    renderLimit = 0,\n    searchFunction: (str: string) => RegExp,\n  ): IMultiSelectOption[] {\n    str = str.toLowerCase();\n\n    // Drop cache because options were updated\n    if (options !== this._lastOptions) {\n      this._lastOptions = options;\n      this._searchCache = {};\n      this._searchCacheInclusive = {};\n      this._prevSkippedItems = {};\n    }\n\n    const filteredOpts = this._searchCache.hasOwnProperty(str)\n      ? this._searchCache[str]\n      : this._doSearch(options, str, limit, searchFunction);\n\n    const isUnderLimit = options.length <= limit;\n\n    return isUnderLimit\n      ? filteredOpts\n      : this._limitRenderedItems(filteredOpts, renderLimit);\n  }\n\n  private _getSubsetOptions(\n    options: IMultiSelectOption[],\n    prevOptions: IMultiSelectOption[],\n    prevSearchStr: string\n  ) {\n    const prevInclusiveOrIdx = this._searchCacheInclusive[prevSearchStr];\n\n    if (prevInclusiveOrIdx === true) {\n      // If have previous results and it was inclusive, do only subsearch\n      return prevOptions;\n    } else if (typeof prevInclusiveOrIdx === 'number') {\n      // Or reuse prev results with unchecked ones\n      return [...prevOptions, ...options.slice(prevInclusiveOrIdx)];\n    }\n\n    return options;\n  }\n\n  private _doSearch(options: IMultiSelectOption[], str: string, limit: number, searchFunction: (str: string) => RegExp) {\n    const prevStr = str.slice(0, -1);\n    const prevResults = this._searchCache[prevStr];\n    const prevResultShift = this._prevSkippedItems[prevStr] || 0;\n\n    if (prevResults) {\n      options = this._getSubsetOptions(options, prevResults, prevStr);\n    }\n\n    const optsLength = options.length;\n    const maxFound = limit > 0 ? Math.min(limit, optsLength) : optsLength;\n    const regexp = searchFunction(str);\n    const filteredOpts: IMultiSelectOption[] = [];\n\n    let i = 0, founded = 0, removedFromPrevResult = 0;\n\n    const doesOptionMatch = (option: IMultiSelectOption) => regexp.test(option.name);\n    const getChildren = (option: IMultiSelectOption) =>\n      options.filter(child => child.parentId === option.id);\n    const getParent = (option: IMultiSelectOption) =>\n      options.find(parent => option.parentId === parent.id);\n    const foundFn = (item: any) => { filteredOpts.push(item); founded++; };\n    const notFoundFn = prevResults ? () => removedFromPrevResult++ : () => { };\n\n    for (; i < optsLength && founded < maxFound; ++i) {\n      const option = options[i];\n      const directMatch = doesOptionMatch(option);\n\n      if (directMatch) {\n        foundFn(option);\n        continue;\n      }\n\n      if (typeof option.parentId === 'undefined') {\n        const childrenMatch = getChildren(option).some(doesOptionMatch);\n\n        if (childrenMatch) {\n          foundFn(option);\n          continue;\n        }\n      }\n\n      if (typeof option.parentId !== 'undefined') {\n        const parentMatch = doesOptionMatch(getParent(option));\n\n        if (parentMatch) {\n          foundFn(option);\n          continue;\n        }\n      }\n\n      notFoundFn();\n    }\n\n    const totalIterations = i + prevResultShift;\n\n    this._searchCache[str] = filteredOpts;\n    this._searchCacheInclusive[str] = i === optsLength || totalIterations;\n    this._prevSkippedItems[str] = removedFromPrevResult + prevResultShift;\n\n    return filteredOpts;\n  }\n\n  private _limitRenderedItems<T>(items: T[], limit: number): T[] {\n    return items.length > limit && limit > 0 ? items.slice(0, limit) : items;\n  }\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[ssAutofocus]'\n})\nexport class AutofocusDirective implements OnInit, OnChanges {\n\n  /**\n   * Will set focus if set to falsy value or not set at all\n   */\n  @Input() ssAutofocus: boolean;\n\n  get element(): { focus?: Function } {\n    return this.elemRef.nativeElement;\n  }\n\n  constructor(\n    @Host() private elemRef: ElementRef,\n  ) { }\n\n  ngOnInit() {\n    this.focus();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const ssAutofocusChange = changes.ssAutofocus;\n\n    if (ssAutofocusChange && !ssAutofocusChange.isFirstChange()) {\n      this.focus();\n    }\n  }\n\n  focus() {\n    if (this.ssAutofocus) {\n      return;\n    }\n\n    this.element.focus && this.element.focus();\n  }\n\n}\n","\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  HostListener,\r\n  Input,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormBuilder,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n  Validator,\r\n} from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { MultiSelectSearchFilter } from './search-filter.pipe';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts, } from './types';\r\n\r\n/*\r\n * Angular 2 Dropdown Multiselect for Bootstrap\r\n *\r\n * Simon Lindh\r\n * https://github.com/softsimon/angular-2-dropdown-multiselect\r\n */\r\n\r\nconst MULTISELECT_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MultiselectDropdownComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'ss-multiselect-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.css'],\r\n  providers: [MULTISELECT_VALUE_ACCESSOR, MultiSelectSearchFilter],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiselectDropdownComponent\r\n  implements OnInit,\r\n  OnChanges,\r\n  DoCheck,\r\n  OnDestroy,\r\n  ControlValueAccessor,\r\n  Validator {\r\n  filterControl: FormControl = this.fb.control('');\r\n\r\n  @Input() options: Array<IMultiSelectOption>;\r\n  @Input() settings: IMultiSelectSettings;\r\n  @Input() texts: IMultiSelectTexts;\r\n  @Input() disabled: boolean = false;\r\n  @Input() disabledSelection: boolean = false;\r\n  @Input() searchFunction: (str: string) => RegExp = this._escapeRegExp;\r\n\r\n  @Output() selectionLimitReached = new EventEmitter();\r\n  @Output() dropdownClosed = new EventEmitter();\r\n  @Output() dropdownOpened = new EventEmitter();\r\n  @Output() onAdded = new EventEmitter();\r\n  @Output() onRemoved = new EventEmitter();\r\n  @Output() onLazyLoad = new EventEmitter();\r\n  @Output() onFilter: Observable<string> = this.filterControl.valueChanges;\r\n\r\n  get focusBack(): boolean {\r\n    return this.settings.focusBack && this._focusBack;\r\n  }\r\n\r\n  public clickedOutside(): void {\r\n    if (!this.isVisible || !this.settings.closeOnClickOutside) { return; }\r\n\r\n    this.isVisible = false;\r\n    this._focusBack = true;\r\n    this.dropdownClosed.emit();\r\n  }\r\n\r\n  destroyed$ = new Subject<any>();\r\n\r\n  filteredOptions: IMultiSelectOption[] = [];\r\n  lazyLoadOptions: IMultiSelectOption[] = [];\r\n  renderFilteredOptions: IMultiSelectOption[] = [];\r\n  model: any[] = [];\r\n  prevModel: any[] = [];\r\n  parents: any[];\r\n  title: string;\r\n  differ: any;\r\n  numSelected: number = 0;\r\n  set isVisible(val: boolean) {\r\n    this._isVisible = val;\r\n    this._workerDocClicked = val ? false : this._workerDocClicked;\r\n  }\r\n  get isVisible() {\r\n    return this._isVisible;\r\n  }\r\n  renderItems = true;\r\n  checkAllSearchRegister = new Set();\r\n  checkAllStatus = false;\r\n  loadedValueIds = [];\r\n  _focusBack = false;\r\n  focusedItem: IMultiSelectOption | undefined;\r\n\r\n  defaultSettings: IMultiSelectSettings = {\r\n    closeOnClickOutside: true,\r\n    pullRight: false,\r\n    enableSearch: false,\r\n    searchRenderLimit: 0,\r\n    searchRenderAfter: 1,\r\n    searchMaxLimit: 0,\r\n    searchMaxRenderedItems: 0,\r\n    checkedStyle: 'checkboxes',\r\n    buttonClasses: 'btn btn-primary dropdown-toggle',\r\n    containerClasses: 'dropdown-inline',\r\n    selectionLimit: 0,\r\n    minSelectionLimit: 0,\r\n    closeOnSelect: false,\r\n    autoUnselect: false,\r\n    showCheckAll: false,\r\n    showUncheckAll: false,\r\n    fixedTitle: false,\r\n    dynamicTitleMaxItems: 3,\r\n    maxHeight: '300px',\r\n    isLazyLoad: false,\r\n    stopScrollPropagation: false,\r\n    loadViewDistance: 1,\r\n    selectAddedValues: false,\r\n    ignoreLabels: false,\r\n    maintainSelectionOrderInTitle: false,\r\n    focusBack: true\r\n  };\r\n  defaultTexts: IMultiSelectTexts = {\r\n    checkAll: 'Check all',\r\n    uncheckAll: 'Uncheck all',\r\n    checked: 'checked',\r\n    checkedPlural: 'checked',\r\n    searchPlaceholder: 'Search...',\r\n    searchEmptyResult: 'Nothing found...',\r\n    searchNoRenderText: 'Type in search box to see results...',\r\n    defaultTitle: 'Select',\r\n    allSelected: 'All selected',\r\n  };\r\n\r\n  get searchLimit() {\r\n    return this.settings.searchRenderLimit;\r\n  }\r\n\r\n  get searchRenderAfter() {\r\n    return this.settings.searchRenderAfter;\r\n  }\r\n\r\n  get searchLimitApplied() {\r\n    return this.searchLimit > 0 && this.options.length > this.searchLimit;\r\n  }\r\n\r\n  private _isVisible = false;\r\n  private _workerDocClicked = false;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private fb: FormBuilder,\r\n    private searchFilter: MultiSelectSearchFilter,\r\n    differs: IterableDiffers,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.differ = differs.find([]).create(null);\r\n    this.settings = this.defaultSettings;\r\n    this.texts = this.defaultTexts;\r\n  }\r\n\r\n  getItemStyle(option: IMultiSelectOption): any {\r\n    const style = {};\r\n    if (!option.isLabel) {\r\n      style['cursor'] = 'pointer';\r\n    }\r\n    if (option.disabled) {\r\n      style['cursor'] = 'default';\r\n    }\r\n  }\r\n\r\n  getItemStyleSelectionDisabled(): any {\r\n    if (this.disabledSelection) {\r\n      return { cursor: 'default' };\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title = this.texts.defaultTitle || '';\r\n\r\n    this.filterControl.valueChanges.pipe(takeUntil(this.destroyed$)).subscribe(() => {\r\n      this.updateRenderItems();\r\n      if (this.settings.isLazyLoad) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['options']) {\r\n      this.options = this.options || [];\r\n      this.parents = this.options\r\n        .filter(option => typeof option.parentId === 'number')\r\n        .map(option => option.parentId);\r\n      this.updateRenderItems();\r\n\r\n      if (\r\n        this.settings.isLazyLoad &&\r\n        this.settings.selectAddedValues &&\r\n        this.loadedValueIds.length === 0\r\n      ) {\r\n        this.loadedValueIds = this.loadedValueIds.concat(\r\n          changes.options.currentValue.map(value => value.id)\r\n        );\r\n      }\r\n      if (\r\n        this.settings.isLazyLoad &&\r\n        this.settings.selectAddedValues &&\r\n        changes.options.previousValue\r\n      ) {\r\n        const addedValues = changes.options.currentValue.filter(\r\n          value => this.loadedValueIds.indexOf(value.id) === -1\r\n        );\r\n        this.loadedValueIds.concat(addedValues.map(value => value.id));\r\n        if (this.checkAllStatus) {\r\n          this.addChecks(addedValues);\r\n        } else if (this.checkAllSearchRegister.size > 0) {\r\n          this.checkAllSearchRegister.forEach(searchValue =>\r\n            this.addChecks(this.applyFilters(addedValues, searchValue))\r\n          );\r\n        }\r\n      }\r\n\r\n      if (this.texts) {\r\n        this.updateTitle();\r\n      }\r\n\r\n      this.fireModelChange();\r\n    }\r\n\r\n    if (changes['settings']) {\r\n      this.settings = { ...this.defaultSettings, ...this.settings };\r\n    }\r\n\r\n    if (changes['texts']) {\r\n      this.texts = { ...this.defaultTexts, ...this.texts };\r\n      if (!changes['texts'].isFirstChange()) { this.updateTitle(); }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  updateRenderItems() {\r\n    this.renderItems =\r\n      !this.searchLimitApplied ||\r\n      this.filterControl.value.length >= this.searchRenderAfter;\r\n    this.filteredOptions = this.applyFilters(\r\n      this.options,\r\n      this.settings.isLazyLoad ? '' : this.filterControl.value\r\n    );\r\n    this.renderFilteredOptions = this.renderItems ? this.filteredOptions : [];\r\n    this.focusedItem = undefined;\r\n  }\r\n\r\n  applyFilters(options, value) {\r\n    return this.searchFilter.transform(\r\n      options,\r\n      value,\r\n      this.settings.searchMaxLimit,\r\n      this.settings.searchMaxRenderedItems,\r\n      this.searchFunction\r\n    );\r\n  }\r\n\r\n  fireModelChange() {\r\n    if (this.model != this.prevModel) {\r\n      this.prevModel = this.model;\r\n      this.onModelChange(this.model);\r\n      this.onModelTouched();\r\n      this.cdRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  onModelChange: Function = (_: any) => { };\r\n  onModelTouched: Function = () => { };\r\n\r\n  writeValue(value: any): void {\r\n    if (value !== undefined && value !== null) {\r\n      this.model = Array.isArray(value) ? value : [value];\r\n      this.ngDoCheck();\r\n    } else {\r\n      this.model = [];\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const changes = this.differ.diff(this.model);\r\n    if (changes) {\r\n      this.updateNumSelected();\r\n      this.updateTitle();\r\n    }\r\n  }\r\n\r\n  validate(_c: AbstractControl): { [key: string]: any } {\r\n    if (this.model && this.model.length) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.options.filter(o => this.model.indexOf(o.id) && !o.disabled).length === 0) {\r\n      return {\r\n        selection: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  registerOnValidatorChange(_fn: () => void): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  clearSearch(event: Event) {\r\n    this.maybeStopPropagation(event);\r\n    this.filterControl.setValue('');\r\n  }\r\n\r\n  toggleDropdown(e?: Event) {\r\n    if (this.isVisible) {\r\n      this._focusBack = true;\r\n    }\r\n\r\n    this.isVisible = !this.isVisible;\r\n    this.isVisible ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\r\n    this.focusedItem = undefined;\r\n  }\r\n\r\n  closeDropdown(e?: Event) {\r\n    this.isVisible = true;\r\n    this.toggleDropdown(e);\r\n  }\r\n\r\n  isSelected(option: IMultiSelectOption): boolean {\r\n    return this.model && this.model.indexOf(option.id) > -1;\r\n  }\r\n\r\n  setSelected(_event: Event, option: IMultiSelectOption) {\r\n    if (option.isLabel) {\r\n      return;\r\n    }\r\n\r\n    if (option.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.disabledSelection) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(()=>{\r\n      this.maybeStopPropagation(_event);\r\n      this.maybePreventDefault(_event);\r\n      const index = this.model.indexOf(option.id);\r\n      const isAtSelectionLimit =\r\n        this.settings.selectionLimit > 0 &&\r\n        this.model.length >= this.settings.selectionLimit;\r\n      const removeItem = (idx, id): void => {\r\n        this.model.splice(idx, 1);\r\n        this.onRemoved.emit(id);\r\n        if (\r\n          this.settings.isLazyLoad &&\r\n          this.lazyLoadOptions.some(val => val.id === id)\r\n        ) {\r\n          this.lazyLoadOptions.splice(\r\n            this.lazyLoadOptions.indexOf(\r\n              this.lazyLoadOptions.find(val => val.id === id)\r\n            ),\r\n            1\r\n          );\r\n        }\r\n      };\r\n\r\n      if (index > -1) {\r\n        if (\r\n          this.settings.minSelectionLimit === undefined ||\r\n          this.numSelected > this.settings.minSelectionLimit\r\n        ) {\r\n          removeItem(index, option.id);\r\n        }\r\n        const parentIndex =\r\n          option.parentId && this.model.indexOf(option.parentId);\r\n        if (parentIndex > -1) {\r\n          removeItem(parentIndex, option.parentId);\r\n        } else if (this.parents.indexOf(option.id) > -1) {\r\n          this.options\r\n            .filter(\r\n              child =>\r\n                this.model.indexOf(child.id) > -1 &&\r\n                child.parentId === option.id\r\n            )\r\n            .forEach(child =>\r\n              removeItem(this.model.indexOf(child.id), child.id)\r\n            );\r\n        }\r\n      } else if (isAtSelectionLimit && !this.settings.autoUnselect) {\r\n        this.selectionLimitReached.emit(this.model.length);\r\n        return;\r\n      } else {\r\n        const addItem = (id): void => {\r\n          this.model.push(id);\r\n          this.onAdded.emit(id);\r\n          if (\r\n            this.settings.isLazyLoad &&\r\n            !this.lazyLoadOptions.some(val => val.id === id)\r\n          ) {\r\n            this.lazyLoadOptions.push(option);\r\n          }\r\n        };\r\n\r\n        addItem(option.id);\r\n        if (!isAtSelectionLimit) {\r\n          if (option.parentId && !this.settings.ignoreLabels) {\r\n            const children = this.options.filter(\r\n              child =>\r\n                child.id !== option.id && child.parentId === option.parentId\r\n            );\r\n            if (children.every(child => this.model.indexOf(child.id) > -1)) {\r\n              addItem(option.parentId);\r\n            }\r\n          } else if (this.parents.indexOf(option.id) > -1) {\r\n            const children = this.options.filter(\r\n              child =>\r\n                this.model.indexOf(child.id) < 0 && child.parentId === option.id\r\n            );\r\n            children.forEach(child => addItem(child.id));\r\n          }\r\n        } else {\r\n          removeItem(0, this.model[0]);\r\n        }\r\n      }\r\n      if (this.settings.closeOnSelect) {\r\n        this.toggleDropdown();\r\n      }\r\n      this.model = this.model.slice();\r\n      this.fireModelChange();\r\n\r\n    }, 0)\r\n  }\r\n\r\n  updateNumSelected() {\r\n    this.numSelected =\r\n      this.model.filter(id => this.parents.indexOf(id) < 0).length || 0;\r\n  }\r\n\r\n  updateTitle() {\r\n    let numSelectedOptions = this.options.length;\r\n    if (this.settings.ignoreLabels) {\r\n      numSelectedOptions = this.options.filter(\r\n        (option: IMultiSelectOption) => !option.isLabel\r\n      ).length;\r\n    }\r\n    if (this.numSelected === 0 || this.settings.fixedTitle) {\r\n      this.title = this.texts ? this.texts.defaultTitle : '';\r\n    } else if (\r\n      this.settings.displayAllSelectedText &&\r\n      this.model.length === numSelectedOptions\r\n    ) {\r\n      this.title = this.texts ? this.texts.allSelected : '';\r\n    } else if (\r\n      this.settings.dynamicTitleMaxItems &&\r\n      this.settings.dynamicTitleMaxItems >= this.numSelected\r\n    ) {\r\n      const useOptions =\r\n        this.settings.isLazyLoad && this.lazyLoadOptions.length\r\n          ? this.lazyLoadOptions\r\n          : this.options;\r\n\r\n      let titleSelections: Array<IMultiSelectOption>;\r\n\r\n      if (this.settings.maintainSelectionOrderInTitle) {\r\n        const optionIds = useOptions.map((selectOption: IMultiSelectOption, idx: number) => selectOption.id);\r\n        titleSelections = this.model\r\n          .map((selectedId) => optionIds.indexOf(selectedId))\r\n          .filter((optionIndex) => optionIndex > -1)\r\n          .map((optionIndex) => useOptions[optionIndex]);\r\n      } else {\r\n        titleSelections = useOptions.filter((option: IMultiSelectOption) => this.model.indexOf(option.id) > -1);\r\n      }\r\n\r\n      this.title = titleSelections.map((option: IMultiSelectOption) => option.name).join(', ');\r\n    } else {\r\n      this.title =\r\n        this.numSelected +\r\n        ' ' +\r\n        (this.numSelected === 1\r\n          ? this.texts.checked\r\n          : this.texts.checkedPlural);\r\n    }\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  searchFilterApplied() {\r\n    return (\r\n      this.settings.enableSearch &&\r\n      this.filterControl.value &&\r\n      this.filterControl.value.length > 0\r\n    );\r\n  }\r\n\r\n  addChecks(options) {\r\n    const checkedOptions = options\r\n      .filter((option: IMultiSelectOption) => {\r\n        if (\r\n          !option.disabled &&\r\n          (\r\n            this.model.indexOf(option.id) === -1 &&\r\n            !(this.settings.ignoreLabels && option.isLabel)\r\n          )\r\n        ) {\r\n          this.onAdded.emit(option.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n      .map((option: IMultiSelectOption) => option.id);\r\n\r\n    this.model = this.model.concat(checkedOptions);\r\n  }\r\n\r\n  checkAll() {\r\n    if (!this.disabledSelection) {\r\n      this.addChecks(\r\n        !this.searchFilterApplied() ? this.options : this.filteredOptions\r\n      );\r\n      if (this.settings.isLazyLoad && this.settings.selectAddedValues) {\r\n        if (this.searchFilterApplied() && !this.checkAllStatus) {\r\n          this.checkAllSearchRegister.add(this.filterControl.value);\r\n        } else {\r\n          this.checkAllSearchRegister.clear();\r\n          this.checkAllStatus = true;\r\n        }\r\n        this.load();\r\n      }\r\n      this.fireModelChange();\r\n    }\r\n  }\r\n\r\n  uncheckAll() {\r\n    if (!this.disabledSelection) {\r\n      const checkedOptions = this.model;\r\n      let unCheckedOptions = !this.searchFilterApplied()\r\n        ? this.model\r\n        : this.filteredOptions.map((option: IMultiSelectOption) => option.id);\r\n      // set unchecked options only to the ones that were checked\r\n      unCheckedOptions = checkedOptions.filter(item => unCheckedOptions.indexOf(item) > -1);\r\n      this.model = this.model.filter((id: number) => {\r\n        if (\r\n          (unCheckedOptions.indexOf(id) < 0 &&\r\n            this.settings.minSelectionLimit === undefined) ||\r\n          unCheckedOptions.indexOf(id) < this.settings.minSelectionLimit\r\n        ) {\r\n          return true;\r\n        } else {\r\n          this.onRemoved.emit(id);\r\n          return false;\r\n        }\r\n      });\r\n      if (this.settings.isLazyLoad && this.settings.selectAddedValues) {\r\n        if (this.searchFilterApplied()) {\r\n          if (this.checkAllSearchRegister.has(this.filterControl.value)) {\r\n            this.checkAllSearchRegister.delete(this.filterControl.value);\r\n            this.checkAllSearchRegister.forEach(function (searchTerm) {\r\n              const filterOptions = this.applyFilters(this.options.filter(option => unCheckedOptions.indexOf(option.id) > -1), searchTerm);\r\n              this.addChecks(filterOptions);\r\n            });\r\n          }\r\n        } else {\r\n          this.checkAllSearchRegister.clear();\r\n          this.checkAllStatus = false;\r\n        }\r\n        this.load();\r\n      }\r\n      this.fireModelChange();\r\n    }\r\n  }\r\n\r\n  preventCheckboxCheck(event: Event, option: IMultiSelectOption) {\r\n    if (\r\n      option.disabled ||\r\n      (\r\n        this.settings.selectionLimit &&\r\n        !this.settings.autoUnselect &&\r\n        this.model.length >= this.settings.selectionLimit &&\r\n        this.model.indexOf(option.id) === -1 &&\r\n        this.maybePreventDefault(event)\r\n      )\r\n    ) {\r\n      this.maybePreventDefault(event);\r\n    }\r\n  }\r\n\r\n  isCheckboxDisabled(option?: IMultiSelectOption): boolean {\r\n    return this.disabledSelection || option && option.disabled;\r\n  }\r\n\r\n  checkScrollPosition(ev) {\r\n    const scrollTop = ev.target.scrollTop;\r\n    const scrollHeight = ev.target.scrollHeight;\r\n    const scrollElementHeight = ev.target.clientHeight;\r\n    const roundingPixel = 1;\r\n    const gutterPixel = 1;\r\n\r\n    if (\r\n      scrollTop >=\r\n      scrollHeight -\r\n      (1 + this.settings.loadViewDistance) * scrollElementHeight -\r\n      roundingPixel -\r\n      gutterPixel\r\n    ) {\r\n      this.load();\r\n    }\r\n  }\r\n\r\n  checkScrollPropagation(ev, element) {\r\n    const scrollTop = element.scrollTop;\r\n    const scrollHeight = element.scrollHeight;\r\n    const scrollElementHeight = element.clientHeight;\r\n\r\n    if (\r\n      (ev.deltaY > 0 && scrollTop + scrollElementHeight >= scrollHeight) ||\r\n      (ev.deltaY < 0 && scrollTop <= 0)\r\n    ) {\r\n      ev = ev || window.event;\r\n      this.maybePreventDefault(ev);\r\n      ev.returnValue = false;\r\n    }\r\n  }\r\n\r\n  trackById(idx: number, selectOption: IMultiSelectOption) {\r\n    return selectOption.id;\r\n  }\r\n\r\n  load() {\r\n    this.onLazyLoad.emit({\r\n      length: this.options.length,\r\n      filter: this.filterControl.value,\r\n      checkAllSearches: this.checkAllSearchRegister,\r\n      checkAllStatus: this.checkAllStatus,\r\n    });\r\n  }\r\n\r\n  focusItem(dir: number, e?: Event) {\r\n    if (!this.isVisible) {\r\n      return;\r\n    }\r\n\r\n    this.maybePreventDefault(e);\r\n\r\n    const idx = this.filteredOptions.indexOf(this.focusedItem);\r\n\r\n    if (idx === -1) {\r\n      this.focusedItem = this.filteredOptions[0];\r\n      return;\r\n    }\r\n\r\n    const nextIdx = idx + dir;\r\n    const newIdx =\r\n      nextIdx < 0\r\n        ? this.filteredOptions.length - 1\r\n        : nextIdx % this.filteredOptions.length;\r\n\r\n    this.focusedItem = this.filteredOptions[newIdx];\r\n  }\r\n\r\n  private maybePreventDefault(e?: { preventDefault?: Function }) {\r\n    if (e && e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  private maybeStopPropagation(e?: { stopPropagation?: Function }) {\r\n    if (e && e.stopPropagation) {\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n  \r\n  private _escapeRegExp(str: string): RegExp {\r\n    const regExpStr = str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n    return new RegExp(regExpStr, 'i');\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { ComponentRef } from '@angular/core';\nimport { ElementRef } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { Host } from '@angular/core';\nimport { Output } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[offClick]',\n})\n\nexport class OffClickDirective {\n  @Output('offClick') onOffClick = new EventEmitter<any>();\n\n  private _clickEvent: MouseEvent;\n  private _touchEvent: TouchEvent;\n\n  @HostListener('click', ['$event']) \n  public onClick(event: MouseEvent): void {\n    this._clickEvent = event;\n  }\n\n  @HostListener('touchstart', ['$event'])\n  public onTouch(event: TouchEvent): void {\n    this._touchEvent = event;\n  }\n\n  @HostListener('document:click', ['$event']) \n  public onDocumentClick(event: MouseEvent): void {\n    if (event !== this._clickEvent) {\n      this.onOffClick.emit(event);\n    }\n  }\n\n  @HostListener('document:touchstart', ['$event'])\n  public onDocumentTouch(event: TouchEvent): void {\n    if (event !== this._touchEvent) {\n      this.onOffClick.emit(event);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AutofocusDirective } from './autofocus.directive';\nimport { MultiselectDropdownComponent } from './dropdown.component';\nimport { MultiSelectSearchFilter } from './search-filter.pipe';\nimport { OffClickDirective } from './off-click.directive';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [\n    MultiselectDropdownComponent,\n    MultiSelectSearchFilter,\n  ],\n  declarations: [\n    MultiselectDropdownComponent,\n    MultiSelectSearchFilter,\n    AutofocusDirective,\n    OffClickDirective\n  ],\n})\nexport class MultiselectDropdownModule { }\n"]}