import { Injectable, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { compress, decompress } from 'lz-string';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var LZStringService = (function () {
    function LZStringService() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    LZStringService.prototype.compress = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        // TODO: Code to compress
        return compress(data);
    };
    /**
     * @param {?} compressed
     * @return {?}
     */
    LZStringService.prototype.decompress = /**
     * @param {?} compressed
     * @return {?}
     */
    function (compressed) {
        // TODO: Code to decompress
        return decompress(compressed);
    };
    LZStringService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    LZStringService.ctorParameters = function () { return []; };
    return LZStringService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var LZStringModule = (function () {
    function LZStringModule() {
    }
    /**
     * @return {?}
     */
    LZStringModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: LZStringModule,
            providers: [LZStringService]
        };
    };
    LZStringModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [],
                    exports: []
                },] },
    ];
    /** @nocollapse */
    LZStringModule.ctorParameters = function () { return []; };
    return LZStringModule;
}());

export { LZStringModule, LZStringService };
