{
  "version": 3,
  "file": "translate.store.js",
  "sources": [
    "ng://@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.store.ts"
  ],
  "sourcesContent": [
    "import {EventEmitter} from \"@angular/core\";\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslationChangeEvent} from \"./translate.service\";\n\nexport class TranslateStore {\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  public defaultLang: string;\n\n  /**\n   * The lang currently used\n   */\n  public currentLang: string = this.defaultLang;\n\n  /**\n   * a list of translations per lang\n   */\n  public translations: any = {};\n\n  /**\n   * an array of langs\n   */\n  public langs: Array<string> = [];\n\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n}\n"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,eAAe,CAAC;AAG3C,MAAM;;;;;2BASyB,IAAI,CAAC,WAAW;;;;4BAKlB,EAAE;;;;qBAKC,EAAE;;;;;;;mCAQmC,IAAI,YAAY,EAA0B;;;;;;;4BAQxD,IAAI,YAAY,EAAmB;;;;;;;mCAQrB,IAAI,YAAY,EAA0B;;CAC9G"
}
