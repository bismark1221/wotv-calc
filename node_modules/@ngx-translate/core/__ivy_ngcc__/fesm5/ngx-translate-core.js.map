{"version":3,"file":"ngx-translate-core.js","sources":["ng:/@ngx-translate/core/lib/translate.loader.ts","ng:/@ngx-translate/core/lib/missing-translation-handler.ts","ng:/@ngx-translate/core/lib/util.ts","ng:/@ngx-translate/core/lib/translate.parser.ts","ng:/@ngx-translate/core/lib/translate.compiler.ts","ng:/@ngx-translate/core/lib/translate.store.ts","ng:/@ngx-translate/core/lib/translate.service.ts","ng:/@ngx-translate/core/lib/translate.directive.ts","ng:/@ngx-translate/core/lib/translate.pipe.ts","ng:/@ngx-translate/core/public_api.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\n\nexport abstract class TranslateLoader {\n  abstract getTranslation(lang: string): Observable<any>;\n}\n\n/**\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\n */\n@Injectable()\nexport class TranslateFakeLoader extends TranslateLoader {\n  getTranslation(lang: string): Observable<any> {\n    return of({});\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {TranslateService} from \"./translate.service\";\n\nexport interface MissingTranslationHandlerParams {\n  /**\n   * the key that's missing in translation files\n   */\n  key: string;\n\n  /**\n   * an instance of the service that was unable to translate the key.\n   */\n  translateService: TranslateService;\n\n  /**\n   * interpolation params that were passed along for translating the given key.\n   */\n  interpolateParams?: Object;\n}\n\nexport abstract class MissingTranslationHandler {\n  /**\n   * A function that handles missing translations.\n   *\n   * @param params context for resolving a missing translation\n   * @returns a value or an observable\n   * If it returns a value, then this value is used.\n   * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\n   * If it doesn't return then the key will be used as a value\n   */\n  abstract handle(params: MissingTranslationHandlerParams): any;\n}\n\n/**\n * This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all\n */\n@Injectable()\nexport class FakeMissingTranslationHandler implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams): string {\n    return params.key;\n  }\n}\n","/* tslint:disable */\n/**\n * Determines if two objects or two values are equivalent.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `equals`.\n *\n * @param o1 Object or value to compare.\n * @param o2 Object or value to compare.\n * @returns true if arguments are equal.\n */\nexport function equals(o1: any, o2: any): boolean {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\n  if (t1 == t2 && t1 == 'object') {\n    if (Array.isArray(o1)) {\n      if (!Array.isArray(o2)) return false;\n      if ((length = o1.length) == o2.length) {\n        for (key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) return false;\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (!equals(o1[key], o2[key])) {\n          return false;\n        }\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n}\n/* tslint:enable */\n\nexport function isDefined(value: any): boolean {\n  return typeof value !== 'undefined' && value !== null;\n}\n\nexport function isObject(item: any): boolean {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\nexport function mergeDeep(target: any, source: any): any {\n  let output = Object.assign({}, target);\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key: any) => {\n      if (isObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, {[key]: source[key]});\n        } else {\n          output[key] = mergeDeep(target[key], source[key]);\n        }\n      } else {\n        Object.assign(output, {[key]: source[key]});\n      }\n    });\n  }\n  return output;\n}\n","import {Injectable} from \"@angular/core\";\nimport {isDefined} from \"./util\";\n\nexport abstract class TranslateParser {\n  /**\n   * Interpolates a string to replace parameters\n   * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\n   * @param expr\n   * @param params\n   */\n  abstract interpolate(expr: string | Function, params?: any): string;\n\n  /**\n   * Gets a value from an object by composed key\n   * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\n   * @param target\n   * @param key\n   */\n  abstract getValue(target: any, key: string): any\n}\n\n@Injectable()\nexport class TranslateDefaultParser extends TranslateParser {\n  templateMatcher: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n\n  public interpolate(expr: string | Function, params?: any): string {\n    let result: string;\n\n    if (typeof expr === 'string') {\n      result = this.interpolateString(expr, params);\n    } else if (typeof expr === 'function') {\n      result = this.interpolateFunction(expr, params);\n    } else {\n      // this should not happen, but an unrelated TranslateService test depends on it\n      result = expr as string;\n    }\n\n    return result;\n  }\n\n  getValue(target: any, key: string): any {\n    let keys = typeof key === 'string' ? key.split('.') : [key];\n    key = '';\n    do {\n      key += keys.shift();\n      if (isDefined(target) && isDefined(target[key]) && (typeof target[key] === 'object' || !keys.length)) {\n        target = target[key];\n        key = '';\n      } else if (!keys.length) {\n        target = undefined;\n      } else {\n        key += '.';\n      }\n    } while (keys.length);\n\n    return target;\n  }\n\n  private interpolateFunction(fn: Function, params?: any) {\n    return fn(params);\n  }\n\n  private interpolateString(expr: string, params?: any) {\n    if (!params) {\n      return expr;\n    }\n\n    return expr.replace(this.templateMatcher, (substring: string, b: string) => {\n      let r = this.getValue(params, b);\n      return isDefined(r) ? r : substring;\n    });\n  }\n}\n","import {Injectable} from \"@angular/core\";\n\nexport abstract class TranslateCompiler {\n  abstract compile(value: string, lang: string): string | Function;\n\n  abstract compileTranslations(translations: any, lang: string): any;\n}\n\n/**\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\n */\n@Injectable()\nexport class TranslateFakeCompiler extends TranslateCompiler {\n  compile(value: string, lang: string): string | Function {\n    return value;\n  }\n\n  compileTranslations(translations: any, lang: string): any {\n    return translations;\n  }\n}\n","import {EventEmitter} from \"@angular/core\";\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslationChangeEvent} from \"./translate.service\";\n\nexport class TranslateStore {\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  public defaultLang: string;\n\n  /**\n   * The lang currently used\n   */\n  public currentLang: string = this.defaultLang;\n\n  /**\n   * a list of translations per lang\n   */\n  public translations: any = {};\n\n  /**\n   * an array of langs\n   */\n  public langs: Array<string> = [];\n\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n}\n","import {EventEmitter, Inject, Injectable, InjectionToken} from \"@angular/core\";\nimport {concat, forkJoin, isObservable, Observable, of, defer} from \"rxjs\";\nimport {concatMap, map, shareReplay, switchMap, take} from \"rxjs/operators\";\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from \"./missing-translation-handler\";\nimport {TranslateCompiler} from \"./translate.compiler\";\nimport {TranslateLoader} from \"./translate.loader\";\nimport {TranslateParser} from \"./translate.parser\";\n\nimport {TranslateStore} from \"./translate.store\";\nimport {isDefined, mergeDeep} from \"./util\";\n\nexport const USE_STORE = new InjectionToken<string>('USE_STORE');\nexport const USE_DEFAULT_LANG = new InjectionToken<string>('USE_DEFAULT_LANG');\nexport const DEFAULT_LANGUAGE = new InjectionToken<string>('DEFAULT_LANGUAGE');\nexport const USE_EXTEND = new InjectionToken<string>('USE_EXTEND');\n\nexport interface TranslationChangeEvent {\n  translations: any;\n  lang: string;\n}\n\nexport interface LangChangeEvent {\n  lang: string;\n  translations: any;\n}\n\nexport interface DefaultLangChangeEvent {\n  lang: string;\n  translations: any;\n}\n\ndeclare interface Window {\n  navigator: any;\n}\n\ndeclare const window: Window;\n\n@Injectable()\nexport class TranslateService {\n  private loadingTranslations: Observable<any>;\n  private pending: boolean = false;\n  private _onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n  private _onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n  private _onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n  private _defaultLang: string;\n  private _currentLang: string;\n  private _langs: Array<string> = [];\n  private _translations: any = {};\n  private _translationRequests: any = {};\n\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onTranslationChange(): EventEmitter<TranslationChangeEvent> {\n    return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;\n  }\n\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onLangChange(): EventEmitter<LangChangeEvent> {\n    return this.isolate ? this._onLangChange : this.store.onLangChange;\n  }\n\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onDefaultLangChange() {\n    return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;\n  }\n\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  get defaultLang(): string {\n    return this.isolate ? this._defaultLang : this.store.defaultLang;\n  }\n\n  set defaultLang(defaultLang: string) {\n    if (this.isolate) {\n      this._defaultLang = defaultLang;\n    } else {\n      this.store.defaultLang = defaultLang;\n    }\n  }\n\n  /**\n   * The lang currently used\n   */\n  get currentLang(): string {\n    return this.isolate ? this._currentLang : this.store.currentLang;\n  }\n\n  set currentLang(currentLang: string) {\n    if (this.isolate) {\n      this._currentLang = currentLang;\n    } else {\n      this.store.currentLang = currentLang;\n    }\n  }\n\n  /**\n   * an array of langs\n   */\n  get langs(): string[] {\n    return this.isolate ? this._langs : this.store.langs;\n  }\n\n  set langs(langs: string[]) {\n    if (this.isolate) {\n      this._langs = langs;\n    } else {\n      this.store.langs = langs;\n    }\n  }\n\n  /**\n   * a list of translations per lang\n   */\n  get translations(): any {\n    return this.isolate ? this._translations : this.store.translations;\n  }\n\n  set translations(translations: any) {\n    if (this.isolate) {\n      this._translations = translations;\n    } else {\n      this.store.translations = translations;\n    }\n  }\n\n  /**\n   *\n   * @param store an instance of the store (that is supposed to be unique)\n   * @param currentLoader An instance of the loader currently used\n   * @param compiler An instance of the compiler currently used\n   * @param parser An instance of the parser currently used\n   * @param missingTranslationHandler A handler for missing translations.\n   * @param useDefaultLang whether we should use default language translation when current language translation is missing.\n   * @param isolate whether this service should use the store or not\n   * @param extend To make a child module extend (and use) translations from parent modules.\n   * @param defaultLanguage Set the default language using configuration\n   */\n  constructor(public store: TranslateStore,\n              public currentLoader: TranslateLoader,\n              public compiler: TranslateCompiler,\n              public parser: TranslateParser,\n              public missingTranslationHandler: MissingTranslationHandler,\n              @Inject(USE_DEFAULT_LANG) private useDefaultLang: boolean = true,\n              @Inject(USE_STORE) private isolate: boolean = false,\n              @Inject(USE_EXTEND) private extend: boolean = false,\n              @Inject(DEFAULT_LANGUAGE) defaultLanguage: string) {\n    /** set the default language from configuration */\n    if (defaultLanguage) {\n      this.setDefaultLang(defaultLanguage);\n    }\n  }\n\n  /**\n   * Sets the default language to use as a fallback\n   */\n  public setDefaultLang(lang: string): void {\n    if (lang === this.defaultLang) {\n      return;\n    }\n\n    let pending: Observable<any> = this.retrieveTranslations(lang);\n\n    if (typeof pending !== \"undefined\") {\n      // on init set the defaultLang immediately\n      if (this.defaultLang == null) {\n        this.defaultLang = lang;\n      }\n\n      pending.pipe(take(1))\n        .subscribe((res: any) => {\n          this.changeDefaultLang(lang);\n        });\n    } else { // we already have this language\n      this.changeDefaultLang(lang);\n    }\n  }\n\n  /**\n   * Gets the default language used\n   */\n  public getDefaultLang(): string {\n    return this.defaultLang;\n  }\n\n  /**\n   * Changes the lang currently used\n   */\n  public use(lang: string): Observable<any> {\n    // don't change the language if the language given is already selected\n    if (lang === this.currentLang) {\n      return of(this.translations[lang]);\n    }\n\n    let pending: Observable<any> = this.retrieveTranslations(lang);\n\n    if (typeof pending !== \"undefined\") {\n      // on init set the currentLang immediately\n      if (!this.currentLang) {\n        this.currentLang = lang;\n      }\n\n      pending.pipe(take(1))\n        .subscribe((res: any) => {\n          this.changeLang(lang);\n        });\n\n      return pending;\n    } else { // we have this language, return an Observable\n      this.changeLang(lang);\n\n      return of(this.translations[lang]);\n    }\n  }\n\n  /**\n   * Retrieves the given translations\n   */\n  private retrieveTranslations(lang: string): Observable<any> {\n    let pending: Observable<any>;\n\n    // if this language is unavailable or extend is true, ask for it\n    if (typeof this.translations[lang] === \"undefined\" || this.extend) {\n      this._translationRequests[lang] = this._translationRequests[lang] || this.getTranslation(lang);\n      pending = this._translationRequests[lang];\n    }\n\n    return pending;\n  }\n\n  /**\n   * Gets an object of translations for a given language with the current loader\n   * and passes it through the compiler\n   */\n  public getTranslation(lang: string): Observable<any> {\n    this.pending = true;\n    const loadingTranslations = this.currentLoader.getTranslation(lang).pipe(\n      shareReplay(1),\n      take(1),\n    );\n\n    this.loadingTranslations = loadingTranslations.pipe(\n      map((res: Object) => this.compiler.compileTranslations(res, lang)),\n      shareReplay(1),\n      take(1),\n    );\n\n    this.loadingTranslations\n      .subscribe({\n        next: (res: Object) => {\n          this.translations[lang] = this.extend && this.translations[lang] ? { ...res, ...this.translations[lang] } : res;\n          this.updateLangs();\n          this.pending = false;\n        },\n        error: (err: any) => {\n          this.pending = false;\n        }\n      });\n\n    return loadingTranslations;\n  }\n\n  /**\n   * Manually sets an object of translations for a given language\n   * after passing it through the compiler\n   */\n  public setTranslation(lang: string, translations: Object, shouldMerge: boolean = false): void {\n    translations = this.compiler.compileTranslations(translations, lang);\n    if ((shouldMerge || this.extend) && this.translations[lang]) {\n      this.translations[lang] = mergeDeep(this.translations[lang], translations);\n    } else {\n      this.translations[lang] = translations;\n    }\n    this.updateLangs();\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Returns an array of currently available langs\n   */\n  public getLangs(): Array<string> {\n    return this.langs;\n  }\n\n  /**\n   * Add available langs\n   */\n  public addLangs(langs: Array<string>): void {\n    langs.forEach((lang: string) => {\n      if (this.langs.indexOf(lang) === -1) {\n        this.langs.push(lang);\n      }\n    });\n  }\n\n  /**\n   * Update the list of available langs\n   */\n  private updateLangs(): void {\n    this.addLangs(Object.keys(this.translations));\n  }\n\n  /**\n   * Returns the parsed result of the translations\n   */\n  public getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\n    let res: string | Observable<string>;\n\n    if (key instanceof Array) {\n      let result: any = {},\n        observables: boolean = false;\n      for (let k of key) {\n        result[k] = this.getParsedResult(translations, k, interpolateParams);\n        if (isObservable(result[k])) {\n          observables = true;\n        }\n      }\n      if (observables) {\n        const sources = key.map(k => isObservable(result[k]) ? result[k] : of(result[k] as string));\n        return forkJoin(sources).pipe(\n          map((arr: Array<string>) => {\n            let obj: any = {};\n            arr.forEach((value: string, index: number) => {\n              obj[key[index]] = value;\n            });\n            return obj;\n          })\n        );\n      }\n      return result;\n    }\n\n    if (translations) {\n      res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\n    }\n\n    if (typeof res === \"undefined\" && this.defaultLang != null && this.defaultLang !== this.currentLang && this.useDefaultLang) {\n      res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\n    }\n\n    if (typeof res === \"undefined\") {\n      let params: MissingTranslationHandlerParams = {key, translateService: this};\n      if (typeof interpolateParams !== 'undefined') {\n        params.interpolateParams = interpolateParams;\n      }\n      res = this.missingTranslationHandler.handle(params);\n    }\n\n    return typeof res !== \"undefined\" ? res : key;\n  }\n\n  /**\n   * Gets the translated value of a key (or an array of keys)\n   * @returns the translated key, or an object of translated keys\n   */\n  public get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n    // check if we are loading a new translation to use\n    if (this.pending) {\n      return this.loadingTranslations.pipe(\n        concatMap((res: any) => {\n          res = this.getParsedResult(res, key, interpolateParams);\n          return isObservable(res) ? res : of(res);\n        }),\n      );\n    } else {\n      let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n      return isObservable(res) ? res : of(res);\n    }\n  }\n\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the translation changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  public getStreamOnTranslationChange(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    return concat(\n      defer(() => this.get(key, interpolateParams)),\n      this.onTranslationChange.pipe(\n        switchMap((event: TranslationChangeEvent) => {\n          const res = this.getParsedResult(event.translations, key, interpolateParams);\n          if (typeof res.subscribe === 'function') {\n            return res;\n          } else {\n            return of(res);\n          }\n        })\n      )\n    );\n  }\n\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the language changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  public stream(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    return concat(\n      defer(() => this.get(key, interpolateParams)),\n      this.onLangChange.pipe(\n        switchMap((event: LangChangeEvent) => {\n          const res = this.getParsedResult(event.translations, key, interpolateParams);\n          return isObservable(res) ? res : of(res);\n        })\n      ));\n  }\n\n  /**\n   * Returns a translation instantly from the internal state of loaded translation.\n   * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\n   */\n  public instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n    if (isObservable(res)) {\n      if (key instanceof Array) {\n        let obj: any = {};\n        key.forEach((value: string, index: number) => {\n          obj[key[index]] = key[index];\n        });\n        return obj;\n      }\n      return key;\n    } else {\n      return res;\n    }\n  }\n\n  /**\n   * Sets the translated value of a key, after compiling it\n   */\n  public set(key: string, value: string, lang: string = this.currentLang): void {\n    this.translations[lang][key] = this.compiler.compile(value, lang);\n    this.updateLangs();\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Changes the current lang\n   */\n  private changeLang(lang: string): void {\n    this.currentLang = lang;\n    this.onLangChange.emit({lang: lang, translations: this.translations[lang]});\n\n    // if there is no default lang, use the one that we just set\n    if (this.defaultLang == null) {\n      this.changeDefaultLang(lang);\n    }\n  }\n\n  /**\n   * Changes the default lang\n   */\n  private changeDefaultLang(lang: string): void {\n    this.defaultLang = lang;\n    this.onDefaultLangChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Allows to reload the lang file from the file\n   */\n  public reloadLang(lang: string): Observable<any> {\n    this.resetLang(lang);\n    return this.getTranslation(lang);\n  }\n\n  /**\n   * Deletes inner translation\n   */\n  public resetLang(lang: string): void {\n    this._translationRequests[lang] = undefined;\n    this.translations[lang] = undefined;\n  }\n\n  /**\n   * Returns the language code name from the browser, e.g. \"de\"\n   */\n  public getBrowserLang(): string {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n\n    let browserLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\n    browserLang = browserLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    if (typeof browserLang === 'undefined') {\n      return undefined\n    }\n\n    if (browserLang.indexOf('-') !== -1) {\n      browserLang = browserLang.split('-')[0];\n    }\n\n    if (browserLang.indexOf('_') !== -1) {\n      browserLang = browserLang.split('_')[0];\n    }\n\n    return browserLang;\n  }\n\n  /**\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\n   */\n  public getBrowserCultureLang(): string {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n\n    let browserCultureLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\n    browserCultureLang = browserCultureLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    return browserCultureLang;\n  }\n}\n","import {AfterViewChecked, ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {Subscription, isObservable} from 'rxjs';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\n\n@Directive({\n  selector: '[translate],[ngx-translate]'\n})\nexport class TranslateDirective implements AfterViewChecked, OnDestroy {\n  key: string;\n  lastParams: any;\n  currentParams: any;\n  onLangChangeSub: Subscription;\n  onDefaultLangChangeSub: Subscription;\n  onTranslationChangeSub: Subscription;\n\n  @Input() set translate(key: string) {\n    if (key) {\n      this.key = key;\n      this.checkNodes();\n    }\n  }\n\n  @Input() set translateParams(params: any) {\n    if (!equals(this.currentParams, params)) {\n      this.currentParams = params;\n      this.checkNodes(true);\n    }\n  }\n\n  constructor(private translateService: TranslateService, private element: ElementRef, private _ref: ChangeDetectorRef) {\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\n    if (!this.onTranslationChangeSub) {\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (event.lang === this.translateService.currentLang) {\n          this.checkNodes(true, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChangeSub) {\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n        this.checkNodes(true, event.translations);\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n        this.checkNodes(true);\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.checkNodes();\n  }\n\n  checkNodes(forceUpdate = false, translations?: any) {\n    let nodes: NodeList = this.element.nativeElement.childNodes;\n    // if the element is empty\n    if (!nodes.length) {\n      // we add the key as content\n      this.setContent(this.element.nativeElement, this.key);\n      nodes = this.element.nativeElement.childNodes;\n    }\n    for (let i = 0; i < nodes.length; ++i) {\n      let node: any = nodes[i];\n      if (node.nodeType === 3) { // node type 3 is a text node\n        let key: string;\n        if (forceUpdate) {\n          node.lastKey = null;\n        }\n        if(isDefined(node.lookupKey)) {\n          key = node.lookupKey;\n        } else if (this.key) {\n          key = this.key;\n        } else {\n          let content = this.getContent(node);\n          let trimmedContent = content.trim();\n          if (trimmedContent.length) {\n            node.lookupKey = trimmedContent;\n            // we want to use the content as a key, not the translation value\n            if (content !== node.currentValue) {\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = content || node.originalContent;\n            } else if (node.originalContent) { // the content seems ok, but the lang has changed\n              // the current content is the translation, not the key, use the last real content as key\n              key = node.originalContent.trim();\n            } else if (content !== node.currentValue) {\n              // we want to use the content as a key, not the translation value\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = content || node.originalContent;\n            }\n          }\n        }\n        this.updateValue(key, node, translations);\n      }\n    }\n  }\n\n  updateValue(key: string, node: any, translations: any) {\n    if (key) {\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\n        return;\n      }\n\n      this.lastParams = this.currentParams;\n\n      let onTranslation = (res: string) => {\n        if (res !== key) {\n          node.lastKey = key;\n        }\n        if (!node.originalContent) {\n          node.originalContent = this.getContent(node);\n        }\n        node.currentValue = isDefined(res) ? res : (node.originalContent || key);\n        // we replace in the original content to preserve spaces that we might have trimmed\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n        this._ref.markForCheck();\n      };\n\n      if (isDefined(translations)) {\n        let res = this.translateService.getParsedResult(translations, key, this.currentParams);\n        if (isObservable(res)) {\n          res.subscribe(onTranslation);\n        } else {\n          onTranslation(res);\n        }\n      } else {\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n      }\n    }\n  }\n\n  getContent(node: any): string {\n    return isDefined(node.textContent) ? node.textContent : node.data;\n  }\n\n  setContent(node: any, content: string): void {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.onLangChangeSub) {\n      this.onLangChangeSub.unsubscribe();\n    }\n\n    if (this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub.unsubscribe();\n    }\n\n    if (this.onTranslationChangeSub) {\n      this.onTranslationChangeSub.unsubscribe();\n    }\n  }\n}\n","import {ChangeDetectorRef, EventEmitter, Injectable, OnDestroy, Pipe, PipeTransform} from '@angular/core';\nimport {isObservable} from 'rxjs';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\n@Pipe({\n  name: 'translate',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  value: string = '';\n  lastKey: string;\n  lastParams: any[];\n  onTranslationChange: Subscription;\n  onLangChange: Subscription;\n  onDefaultLangChange: Subscription;\n\n  constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\n  }\n\n  updateValue(key: string, interpolateParams?: Object, translations?: any): void {\n    let onTranslation = (res: string) => {\n      this.value = res !== undefined ? res : key;\n      this.lastKey = key;\n      this._ref.markForCheck();\n    };\n    if (translations) {\n      let res = this.translate.getParsedResult(translations, key, interpolateParams);\n      if (isObservable(res.subscribe)) {\n        res.subscribe(onTranslation);\n      } else {\n        onTranslation(res);\n      }\n    }\n    this.translate.get(key, interpolateParams).subscribe(onTranslation);\n  }\n\n  transform(query: string, ...args: any[]): any {\n    if (!query || !query.length) {\n      return query;\n    }\n\n    // if we ask another time for the same key, return the last value\n    if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n      return this.value;\n    }\n\n    let interpolateParams: Object;\n    if (isDefined(args[0]) && args.length) {\n      if (typeof args[0] === 'string' && args[0].length) {\n        // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n        // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n        let validArgs: string = args[0]\n          .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\n          .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n        try {\n          interpolateParams = JSON.parse(validArgs);\n        } catch (e) {\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n        }\n      } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n        interpolateParams = args[0];\n      }\n    }\n\n    // store the query, in case it changes\n    this.lastKey = query;\n\n    // store the params, in case they change\n    this.lastParams = args;\n\n    // set the value\n    this.updateValue(query, interpolateParams);\n\n    // if there is a subscription to onLangChange, clean it\n    this._dispose();\n\n    // subscribe to onTranslationChange event, in case the translations change\n    if (!this.onTranslationChange) {\n      this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (this.lastKey && event.lang === this.translate.currentLang) {\n          this.lastKey = null;\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChange) {\n      this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChange) {\n      this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams);\n        }\n      });\n    }\n\n    return this.value;\n  }\n\n  /**\n   * Clean any existing subscription to change events\n   */\n  private _dispose(): void {\n    if (typeof this.onTranslationChange !== 'undefined') {\n      this.onTranslationChange.unsubscribe();\n      this.onTranslationChange = undefined;\n    }\n    if (typeof this.onLangChange !== 'undefined') {\n      this.onLangChange.unsubscribe();\n      this.onLangChange = undefined;\n    }\n    if (typeof this.onDefaultLangChange !== 'undefined') {\n      this.onDefaultLangChange.unsubscribe();\n      this.onDefaultLangChange = undefined;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._dispose();\n  }\n}\n","import {NgModule, ModuleWithProviders, Provider} from \"@angular/core\";\nimport {TranslateLoader, TranslateFakeLoader} from \"./lib/translate.loader\";\nimport {MissingTranslationHandler, FakeMissingTranslationHandler} from \"./lib/missing-translation-handler\";\nimport {TranslateParser, TranslateDefaultParser} from \"./lib/translate.parser\";\nimport {TranslateCompiler, TranslateFakeCompiler} from \"./lib/translate.compiler\";\nimport {TranslateDirective} from \"./lib/translate.directive\";\nimport {TranslatePipe} from \"./lib/translate.pipe\";\nimport {TranslateStore} from \"./lib/translate.store\";\nimport {USE_DEFAULT_LANG, DEFAULT_LANGUAGE, USE_STORE, TranslateService, USE_EXTEND} from \"./lib/translate.service\";\n\nexport * from \"./lib/translate.loader\";\nexport * from \"./lib/translate.service\";\nexport * from \"./lib/missing-translation-handler\";\nexport * from \"./lib/translate.parser\";\nexport * from \"./lib/translate.compiler\";\nexport * from \"./lib/translate.directive\";\nexport * from \"./lib/translate.pipe\";\nexport * from \"./lib/translate.store\";\n\nexport interface TranslateModuleConfig {\n  loader?: Provider;\n  compiler?: Provider;\n  parser?: Provider;\n  missingTranslationHandler?: Provider;\n  // isolate the service instance, only works for lazy loaded modules or components with the \"providers\" property\n  isolate?: boolean;\n  // extends translations for a given language instead of ignoring them if present\n  extend?: boolean;\n  useDefaultLang?: boolean;\n  defaultLanguage?: string;\n}\n\n@NgModule({\n  declarations: [\n    TranslatePipe,\n    TranslateDirective\n  ],\n  exports: [\n    TranslatePipe,\n    TranslateDirective\n  ]\n})\nexport class TranslateModule {\n  /**\n   * Use this method in your root module to provide the TranslateService\n   */\n  static forRoot(config: TranslateModuleConfig = {}): ModuleWithProviders<TranslateModule> {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        config.loader || {provide: TranslateLoader, useClass: TranslateFakeLoader},\n        config.compiler || {provide: TranslateCompiler, useClass: TranslateFakeCompiler},\n        config.parser || {provide: TranslateParser, useClass: TranslateDefaultParser},\n        config.missingTranslationHandler || {provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler},\n        TranslateStore,\n        {provide: USE_STORE, useValue: config.isolate},\n        {provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang},\n        {provide: USE_EXTEND, useValue: config.extend},\n        {provide: DEFAULT_LANGUAGE, useValue: config.defaultLanguage},\n        TranslateService\n      ]\n    };\n  }\n\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(config: TranslateModuleConfig = {}): ModuleWithProviders<TranslateModule> {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        config.loader || {provide: TranslateLoader, useClass: TranslateFakeLoader},\n        config.compiler || {provide: TranslateCompiler, useClass: TranslateFakeCompiler},\n        config.parser || {provide: TranslateParser, useClass: TranslateDefaultParser},\n        config.missingTranslationHandler || {provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler},\n        {provide: USE_STORE, useValue: config.isolate},\n        {provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang},\n        {provide: USE_EXTEND, useValue: config.extend},\n        {provide: DEFAULT_LANGUAGE, useValue: config.defaultLanguage},\n        TranslateService\n      ]\n    };\n  }\n}\n"]}