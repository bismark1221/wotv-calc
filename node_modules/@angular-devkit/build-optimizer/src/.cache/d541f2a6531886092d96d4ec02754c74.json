{"remainingRequest":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/data/www/ffbe-chain/node_modules/@ng-bootstrap/ng-bootstrap/buttons/checkbox.js","dependencies":[{"path":"/data/www/ffbe-chain/node_modules/@ng-bootstrap/ng-bootstrap/buttons/checkbox.js","mtime":1529481784191},{"path":"/data/www/ffbe-chain/node_modules/cache-loader/dist/cjs.js","mtime":1529481786296},{"path":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529481776533}],"contextDependencies":[],"result":["import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbButtonLabel } from './label';\nvar NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbCheckBox; }),\n    multi: true\n};\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\nvar NgbCheckBox = /*@__PURE__*/ (function () {\n    function NgbCheckBox(_label) {\n        this._label = _label;\n        /**\n           * A flag indicating if a given checkbox button is disabled.\n           */\n        this.disabled = false;\n        /**\n           * Value to be propagated as model when the checkbox is checked.\n           */\n        this.valueChecked = true;\n        /**\n           * Value to be propagated as model when the checkbox is unchecked.\n           */\n        this.valueUnChecked = false;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(NgbCheckBox.prototype, \"focused\", {\n        set: function (isFocused) {\n            this._label.focused = isFocused;\n            if (!isFocused) {\n                this.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbCheckBox.prototype.onInputChange = function ($event) {\n        var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    };\n    NgbCheckBox.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbCheckBox.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbCheckBox.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    };\n    NgbCheckBox.prototype.writeValue = function (value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n    };\n    return NgbCheckBox;\n}());\nexport { NgbCheckBox };\n//# sourceMappingURL=checkbox.js.map\n",null]}