{"remainingRequest":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/data/www/ffbe-chain/node_modules/angular2-prettyjson/esm5/angular2-prettyjson.js","dependencies":[{"path":"/data/www/ffbe-chain/node_modules/angular2-prettyjson/esm5/angular2-prettyjson.js","mtime":1529398084347},{"path":"/data/www/ffbe-chain/node_modules/cache-loader/dist/cjs.js","mtime":1529481786296},{"path":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529481776533}],"contextDependencies":[],"result":["/**\n * @license angular2-prettyjson\n * MIT license\n */\nimport { Component, Input, NgModule, Pipe } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PrettyJsonComponent = /*@__PURE__*/ (function () {\n    function PrettyJsonComponent() {\n    }\n    return PrettyJsonComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction serializer() {\n    var /** @type {?} */ stack = [];\n    var /** @type {?} */ keys = [];\n    var /** @type {?} */ cycleReplacer = function (key, value) {\n        if (stack[0] === value) {\n            return \"[Circular ~]\";\n        }\n        return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\n    };\n    return function (key, value) {\n        if (stack.length > 0) {\n            var /** @type {?} */ thisPos = stack.indexOf(this);\n            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n            if (~stack.indexOf(value)) {\n                value = cycleReplacer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n        return value;\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PrettyJsonPipe = /*@__PURE__*/ (function () {\n    function PrettyJsonPipe() {\n    }\n    /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n    PrettyJsonPipe.prototype.transform = /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n        function (obj, spaces) {\n            if (spaces === void 0) {\n                spaces = 2;\n            }\n            return this._syntaxHighlight(obj, serializer(), spaces);\n        };\n    /**\n     * @param {?} json\n     * @param {?} serializer\n     * @param {?} spacing\n     * @return {?}\n     */\n    PrettyJsonPipe.prototype._syntaxHighlight = /**\n     * @param {?} json\n     * @param {?} serializer\n     * @param {?} spacing\n     * @return {?}\n     */\n        function (json, serializer$$1, spacing) {\n            if (json === undefined) {\n                return '<span class=\"undefined\"></span>';\n            }\n            // Credits to the accepted answer here\n            // http://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript\n            if (typeof json !== \"string\") {\n                json = JSON.stringify(json, serializer$$1, spacing);\n            }\n            json = json.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n            return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n                var /** @type {?} */ cls = \"number\";\n                if (/^\"/.test(match)) {\n                    if (/:$/.test(match)) {\n                        cls = \"key\";\n                    }\n                    else {\n                        cls = \"string\";\n                    }\n                }\n                else if (/true|false/.test(match)) {\n                    cls = \"boolean\";\n                }\n                else if (/null/.test(match)) {\n                    cls = \"null\";\n                }\n                return \"<span class=\\\"\" + cls + \"\\\">\" + match + \"</span>\";\n            });\n        };\n    return PrettyJsonPipe;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SafeJsonPipe = /*@__PURE__*/ (function () {\n    function SafeJsonPipe() {\n    }\n    /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n    SafeJsonPipe.prototype.transform = /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n        function (obj, spaces) {\n            if (spaces === void 0) {\n                spaces = 2;\n            }\n            return JSON.stringify(obj, serializer(), spaces);\n        };\n    return SafeJsonPipe;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PrettyJsonModule = /*@__PURE__*/ (function () {\n    function PrettyJsonModule() {\n    }\n    return PrettyJsonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Public classes.\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Angular library starter\n * Build an Angular library compatible with AoT compilation & Tree shaking\n * Copyright Roberto Simonetti\n * MIT license\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { PrettyJsonModule, SafeJsonPipe as ɵc, PrettyJsonComponent as ɵa, PrettyJsonPipe as ɵb };\n//# sourceMappingURL=angular2-prettyjson.js.map\n",null]}