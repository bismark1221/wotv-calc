{"remainingRequest":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/data/www/ffbe-chain/node_modules/@ngx-translate/core/index.js","dependencies":[{"path":"/data/www/ffbe-chain/node_modules/@ngx-translate/core/index.js","mtime":1529398084128},{"path":"/data/www/ffbe-chain/node_modules/cache-loader/dist/cjs.js","mtime":1529481786296},{"path":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529481776533}],"contextDependencies":[],"result":["import { NgModule } from \"@angular/core\";\nimport { TranslateLoader, TranslateFakeLoader } from \"./src/translate.loader\";\nimport { TranslateService } from \"./src/translate.service\";\nimport { MissingTranslationHandler, FakeMissingTranslationHandler } from \"./src/missing-translation-handler\";\nimport { TranslateParser, TranslateDefaultParser } from \"./src/translate.parser\";\nimport { TranslateCompiler, TranslateFakeCompiler } from \"./src/translate.compiler\";\nimport { TranslateDirective } from \"./src/translate.directive\";\nimport { TranslatePipe } from \"./src/translate.pipe\";\nimport { TranslateStore } from \"./src/translate.store\";\nimport { USE_STORE } from \"./src/translate.service\";\nimport { USE_DEFAULT_LANG } from \"./src/translate.service\";\nexport * from \"./src/translate.loader\";\nexport * from \"./src/translate.service\";\nexport * from \"./src/missing-translation-handler\";\nexport * from \"./src/translate.parser\";\nexport * from \"./src/translate.compiler\";\nexport * from \"./src/translate.directive\";\nexport * from \"./src/translate.pipe\";\nvar TranslateModule = /*@__PURE__*/ (function () {\n    function TranslateModule() {\n    }\n    /**\n     * Use this method in your root module to provide the TranslateService\n     * @param {TranslateModuleConfig} config\n     * @returns {ModuleWithProviders}\n     */\n    TranslateModule.forRoot = function (config) {\n        if (config === void 0) {\n            config = {};\n        }\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                TranslateStore,\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                TranslateService\n            ]\n        };\n    };\n    /**\n     * Use this method in your other (non root) modules to import the directive/pipe\n     * @param {TranslateModuleConfig} config\n     * @returns {ModuleWithProviders}\n     */\n    TranslateModule.forChild = function (config) {\n        if (config === void 0) {\n            config = {};\n        }\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                TranslateService\n            ]\n        };\n    };\n    return TranslateModule;\n}());\nexport { TranslateModule };\n",null]}