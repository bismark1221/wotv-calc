{"remainingRequest":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/data/www/ffbe-chain/node_modules/angular2-lightbox/lightbox.component.js","dependencies":[{"path":"/data/www/ffbe-chain/node_modules/angular2-lightbox/lightbox.component.js","mtime":1529481785388},{"path":"/data/www/ffbe-chain/node_modules/cache-loader/dist/cjs.js","mtime":1529481786296},{"path":"/data/www/ffbe-chain/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529481776533}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nvar __param = /*@__PURE__*/ require(\"tslib\").__param;\nvar core_1 = require(\"@angular/core\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar lightbox_event_service_1 = require(\"./lightbox-event.service\");\nvar LightboxComponent = /*@__PURE__*/ (function () {\n    function LightboxComponent(_elemRef, _rendererRef, _lightboxEvent, _lightboxElem, _lightboxWindowRef, _sanitizer, _documentRef) {\n        var _this = this;\n        this._elemRef = _elemRef;\n        this._rendererRef = _rendererRef;\n        this._lightboxEvent = _lightboxEvent;\n        this._lightboxElem = _lightboxElem;\n        this._lightboxWindowRef = _lightboxWindowRef;\n        this._sanitizer = _sanitizer;\n        this._documentRef = _documentRef;\n        // initialize data\n        this.options = this.options || {};\n        this.album = this.album || [];\n        this.currentImageIndex = this.currentImageIndex || 0;\n        this._windowRef = this._lightboxWindowRef.nativeWindow;\n        // control the interactive of the directive\n        this.ui = {\n            // control the appear of the reloader\n            // false: image has loaded completely and ready to be shown\n            // true: image is still loading\n            showReloader: true,\n            // control the appear of the nav arrow\n            // the arrowNav is the parent of both left and right arrow\n            // in some cases, the parent shows but the child does not show\n            showLeftArrow: false,\n            showRightArrow: false,\n            showArrowNav: false,\n            // control whether to show the\n            // page number or not\n            showPageNumber: false,\n            showCaption: false,\n            classList: 'lightbox animation fadeIn'\n        };\n        this.content = {\n            pageNumber: ''\n        };\n        this._event = {};\n        this._lightboxElem = this._elemRef;\n        this._event.subscription = this._lightboxEvent.lightboxEvent$\n            .subscribe(function (event) { return _this._onReceivedEvent(event); });\n    }\n    LightboxComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.album.forEach(function (album) {\n            if (album.caption) {\n                album.caption = _this._sanitizer.sanitize(core_1.SecurityContext.HTML, album.caption);\n            }\n        });\n    };\n    LightboxComponent.prototype.ngAfterViewInit = function () {\n        // need to init css value here, after the view ready\n        // actually these values are always 0\n        this._cssValue = {\n            containerTopPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-top')),\n            containerRightPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-right')),\n            containerBottomPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-bottom')),\n            containerLeftPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-left')),\n            imageBorderWidthTop: Math.round(this._getCssStyleValue(this._imageElem, 'border-top-width')),\n            imageBorderWidthBottom: Math.round(this._getCssStyleValue(this._imageElem, 'border-bottom-width')),\n            imageBorderWidthLeft: Math.round(this._getCssStyleValue(this._imageElem, 'border-left-width')),\n            imageBorderWidthRight: Math.round(this._getCssStyleValue(this._imageElem, 'border-right-width'))\n        };\n        if (this._validateInputData()) {\n            this._prepareComponent();\n            this._registerImageLoadingEvent();\n        }\n    };\n    LightboxComponent.prototype.ngOnDestroy = function () {\n        if (!this.options.disableKeyboardNav) {\n            // unbind keyboard event\n            this._disableKeyboardNav();\n        }\n        this._event.subscription.unsubscribe();\n    };\n    LightboxComponent.prototype.close = function ($event) {\n        $event.stopPropagation();\n        if ($event.target.classList.contains('lightbox') ||\n            $event.target.classList.contains('lb-loader') ||\n            $event.target.classList.contains('lb-close')) {\n            this._lightboxEvent.broadcastLightboxEvent({ id: lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE, data: null });\n        }\n    };\n    LightboxComponent.prototype.nextImage = function () {\n        if (this.album.length === 1) {\n            return;\n        }\n        else if (this.currentImageIndex === this.album.length - 1) {\n            this._changeImage(0);\n        }\n        else {\n            this._changeImage(this.currentImageIndex + 1);\n        }\n    };\n    LightboxComponent.prototype.prevImage = function () {\n        if (this.album.length === 1) {\n            return;\n        }\n        else if (this.currentImageIndex === 0 && this.album.length > 1) {\n            this._changeImage(this.album.length - 1);\n        }\n        else {\n            this._changeImage(this.currentImageIndex - 1);\n        }\n    };\n    LightboxComponent.prototype._validateInputData = function () {\n        if (this.album &&\n            this.album instanceof Array &&\n            this.album.length > 0) {\n            for (var i = 0; i < this.album.length; i++) {\n                // check whether each _nside\n                // album has src data or not\n                if (this.album[i].src) {\n                    continue;\n                }\n                throw new Error('One of the album data does not have source data');\n            }\n        }\n        else {\n            throw new Error('No album data or album data is not correct in type');\n        }\n        // to prevent data understand as string\n        // convert it to number\n        if (isNaN(this.currentImageIndex)) {\n            throw new Error('Current image index is not a number');\n        }\n        else {\n            this.currentImageIndex = Number(this.currentImageIndex);\n        }\n        return true;\n    };\n    LightboxComponent.prototype._registerImageLoadingEvent = function () {\n        var _this = this;\n        var preloader = new Image();\n        preloader.onload = function () {\n            _this._onLoadImageSuccess();\n        };\n        var src = this.album[this.currentImageIndex].src;\n        preloader.src = this._sanitizer.sanitize(core_1.SecurityContext.URL, src);\n    };\n    /**\n     * Fire when the image is loaded\n     */\n    LightboxComponent.prototype._onLoadImageSuccess = function () {\n        if (!this.options.disableKeyboardNav) {\n            // unbind keyboard event during transition\n            this._disableKeyboardNav();\n        }\n        var imageHeight;\n        var imageWidth;\n        var maxImageHeight;\n        var maxImageWidth;\n        var windowHeight;\n        var windowWidth;\n        var naturalImageWidth;\n        var naturalImageHeight;\n        // set default width and height of image to be its natural\n        imageWidth = naturalImageWidth = this._imageElem.nativeElement.naturalWidth;\n        imageHeight = naturalImageHeight = this._imageElem.nativeElement.naturalHeight;\n        if (this.options.fitImageInViewPort) {\n            windowWidth = this._windowRef.innerWidth;\n            windowHeight = this._windowRef.innerHeight;\n            maxImageWidth = windowWidth - this._cssValue.containerLeftPadding -\n                this._cssValue.containerRightPadding - this._cssValue.imageBorderWidthLeft -\n                this._cssValue.imageBorderWidthRight - 20;\n            maxImageHeight = windowHeight - this._cssValue.containerTopPadding -\n                this._cssValue.containerTopPadding - this._cssValue.imageBorderWidthTop -\n                this._cssValue.imageBorderWidthBottom - 120;\n            if (naturalImageWidth > maxImageWidth || naturalImageHeight > maxImageHeight) {\n                if ((naturalImageWidth / maxImageWidth) > (naturalImageHeight / maxImageHeight)) {\n                    imageWidth = maxImageWidth;\n                    imageHeight = Math.round(naturalImageHeight / (naturalImageWidth / imageWidth));\n                }\n                else {\n                    imageHeight = maxImageHeight;\n                    imageWidth = Math.round(naturalImageWidth / (naturalImageHeight / imageHeight));\n                }\n            }\n            this._rendererRef.setElementStyle(this._imageElem.nativeElement, 'width', imageWidth + \"px\");\n            this._rendererRef.setElementStyle(this._imageElem.nativeElement, 'height', imageHeight + \"px\");\n        }\n        this._sizeContainer(imageWidth, imageHeight);\n        if (this.options.centerVertically) {\n            this._centerVertically(imageWidth, imageHeight);\n        }\n    };\n    LightboxComponent.prototype._centerVertically = function (imageWidth, imageHeight) {\n        var scrollOffset = this._documentRef.documentElement.scrollTop;\n        var windowHeight = this._windowRef.innerHeight;\n        var viewOffset = windowHeight / 2 - imageHeight / 2;\n        var topDistance = scrollOffset + viewOffset;\n        this._rendererRef.setElementStyle(this._lightboxElem.nativeElement, 'top', topDistance + \"px\");\n    };\n    LightboxComponent.prototype._sizeContainer = function (imageWidth, imageHeight) {\n        var _this = this;\n        var oldWidth = this._outerContainerElem.nativeElement.offsetWidth;\n        var oldHeight = this._outerContainerElem.nativeElement.offsetHeight;\n        var newWidth = imageWidth + this._cssValue.containerRightPadding + this._cssValue.containerLeftPadding +\n            this._cssValue.imageBorderWidthLeft + this._cssValue.imageBorderWidthRight;\n        var newHeight = imageHeight + this._cssValue.containerTopPadding + this._cssValue.containerBottomPadding +\n            this._cssValue.imageBorderWidthTop + this._cssValue.imageBorderWidthBottom;\n        if (oldWidth !== newWidth || oldHeight !== newHeight) {\n            this._rendererRef.setElementStyle(this._outerContainerElem.nativeElement, 'width', newWidth + \"px\");\n            this._rendererRef.setElementStyle(this._outerContainerElem.nativeElement, 'height', newHeight + \"px\");\n            // bind resize event to outer container\n            this._event.transitions = [];\n            ['transitionend', 'webkitTransitionEnd', 'oTransitionEnd', 'MSTransitionEnd'].forEach(function (eventName) {\n                _this._event.transitions.push(_this._rendererRef.listen(_this._outerContainerElem.nativeElement, eventName, function (event) {\n                    if (event.target === event.currentTarget) {\n                        _this._postResize(newWidth, newHeight);\n                    }\n                }));\n            });\n        }\n        else {\n            this._postResize(newWidth, newHeight);\n        }\n    };\n    LightboxComponent.prototype._postResize = function (newWidth, newHeight) {\n        // unbind resize event\n        if (Array.isArray(this._event.transitions)) {\n            this._event.transitions.forEach(function (eventHandler) {\n                eventHandler();\n            });\n            this._event.transitions = [];\n        }\n        this._rendererRef.setElementStyle(this._dataContainerElem.nativeElement, 'width', newWidth + \"px\");\n        this._showImage();\n    };\n    LightboxComponent.prototype._showImage = function () {\n        this.ui.showReloader = false;\n        this._updateNav();\n        this._updateDetails();\n        if (!this.options.disableKeyboardNav) {\n            this._enableKeyboardNav();\n        }\n    };\n    LightboxComponent.prototype._prepareComponent = function () {\n        // add css3 animation\n        this._addCssAnimation();\n        // position the image according to user's option\n        this._positionLightBox();\n    };\n    LightboxComponent.prototype._positionLightBox = function () {\n        // @see https://stackoverflow.com/questions/3464876/javascript-get-window-x-y-position-for-scroll\n        var top = (this._windowRef.pageYOffset || this._documentRef.documentElement.scrollTop) +\n            this.options.positionFromTop;\n        var left = this._windowRef.pageXOffset || this._documentRef.documentElement.scrollLeft;\n        if (!this.options.centerVertically) {\n            this._rendererRef.setElementStyle(this._lightboxElem.nativeElement, 'top', top + \"px\");\n        }\n        this._rendererRef.setElementStyle(this._lightboxElem.nativeElement, 'left', left + \"px\");\n        this._rendererRef.setElementStyle(this._lightboxElem.nativeElement, 'display', 'block');\n        // disable scrolling of the page while open\n        if (this.options.disableScrolling) {\n            this._rendererRef.setElementClass(this._documentRef.body, 'lb-disable-scrolling', true);\n        }\n    };\n    /**\n     * addCssAnimation add css3 classes for animate lightbox\n     */\n    LightboxComponent.prototype._addCssAnimation = function () {\n        var resizeDuration = this.options.resizeDuration;\n        var fadeDuration = this.options.fadeDuration;\n        this._rendererRef.setElementStyle(this._lightboxElem.nativeElement, '-webkit-animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._lightboxElem.nativeElement, 'animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._outerContainerElem.nativeElement, '-webkit-transition-duration', resizeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._outerContainerElem.nativeElement, 'transition-duration', resizeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._dataContainerElem.nativeElement, '-webkit-animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._dataContainerElem.nativeElement, 'animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._imageElem.nativeElement, '-webkit-animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._imageElem.nativeElement, 'animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._captionElem.nativeElement, '-webkit-animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._captionElem.nativeElement, 'animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._numberElem.nativeElement, '-webkit-animation-duration', fadeDuration + \"s\");\n        this._rendererRef.setElementStyle(this._numberElem.nativeElement, 'animation-duration', fadeDuration + \"s\");\n    };\n    LightboxComponent.prototype._end = function () {\n        var _this = this;\n        this.ui.classList = 'lightbox animation fadeOut';\n        if (this.options.disableScrolling) {\n            this._rendererRef.setElementClass(this._documentRef.body, 'lb-disable-scrolling', false);\n        }\n        setTimeout(function () {\n            _this.cmpRef.destroy();\n        }, this.options.fadeDuration * 1000);\n    };\n    LightboxComponent.prototype._updateDetails = function () {\n        // update the caption\n        if (typeof this.album[this.currentImageIndex].caption !== 'undefined' &&\n            this.album[this.currentImageIndex].caption !== '') {\n            this.ui.showCaption = true;\n        }\n        // update the page number if user choose to do so\n        // does not perform numbering the page if the\n        // array length in album <= 1\n        if (this.album.length > 1 && this.options.showImageNumberLabel) {\n            this.ui.showPageNumber = true;\n            this.content.pageNumber = this._albumLabel();\n        }\n    };\n    LightboxComponent.prototype._albumLabel = function () {\n        // due to {this.currentImageIndex} is set from 0 to {this.album.length} - 1\n        return \"Image \" + Number(this.currentImageIndex + 1) + \" of \" + this.album.length;\n    };\n    LightboxComponent.prototype._changeImage = function (newIndex) {\n        this.currentImageIndex = newIndex;\n        this._hideImage();\n        this._registerImageLoadingEvent();\n        this._lightboxEvent.broadcastLightboxEvent({ id: lightbox_event_service_1.LIGHTBOX_EVENT.CHANGE_PAGE, data: newIndex });\n    };\n    LightboxComponent.prototype._hideImage = function () {\n        this.ui.showReloader = true;\n        this.ui.showArrowNav = false;\n        this.ui.showLeftArrow = false;\n        this.ui.showRightArrow = false;\n        this.ui.showPageNumber = false;\n        this.ui.showCaption = false;\n    };\n    LightboxComponent.prototype._updateNav = function () {\n        var alwaysShowNav = false;\n        // check to see the browser support touch event\n        try {\n            this._documentRef.createEvent('TouchEvent');\n            alwaysShowNav = (this.options.alwaysShowNavOnTouchDevices) ? true : false;\n        }\n        catch (e) {\n        }\n        // initially show the arrow nav\n        // which is the parent of both left and right nav\n        this._showArrowNav();\n        if (this.album.length > 1) {\n            if (this.options.wrapAround) {\n                if (alwaysShowNav) {\n                    // alternatives this.$lightbox.find('.lb-prev, .lb-next').css('opacity', '1');\n                    this._rendererRef.setElementStyle(this._leftArrowElem.nativeElement, 'opacity', '1');\n                    this._rendererRef.setElementStyle(this._rightArrowElem.nativeElement, 'opacity', '1');\n                }\n                // alternatives this.$lightbox.find('.lb-prev, .lb-next').show();\n                this._showLeftArrowNav();\n                this._showRightArrowNav();\n            }\n            else {\n                if (this.currentImageIndex > 0) {\n                    // alternatives this.$lightbox.find('.lb-prev').show();\n                    this._showLeftArrowNav();\n                    if (alwaysShowNav) {\n                        // alternatives this.$lightbox.find('.lb-prev').css('opacity', '1');\n                        this._rendererRef.setElementStyle(this._leftArrowElem.nativeElement, 'opacity', '1');\n                    }\n                }\n                if (this.currentImageIndex < this.album.length - 1) {\n                    // alternatives this.$lightbox.find('.lb-next').show();\n                    this._showRightArrowNav();\n                    if (alwaysShowNav) {\n                        // alternatives this.$lightbox.find('.lb-next').css('opacity', '1');\n                        this._rendererRef.setElementStyle(this._rightArrowElem.nativeElement, 'opacity', '1');\n                    }\n                }\n            }\n        }\n    };\n    LightboxComponent.prototype._showLeftArrowNav = function () {\n        this.ui.showLeftArrow = true;\n    };\n    LightboxComponent.prototype._showRightArrowNav = function () {\n        this.ui.showRightArrow = true;\n    };\n    LightboxComponent.prototype._showArrowNav = function () {\n        this.ui.showArrowNav = (this.album.length !== 1);\n    };\n    LightboxComponent.prototype._enableKeyboardNav = function () {\n        var _this = this;\n        this._event.keyup = this._rendererRef.listenGlobal('document', 'keyup', function (event) {\n            _this._keyboardAction(event);\n        });\n    };\n    LightboxComponent.prototype._disableKeyboardNav = function () {\n        if (this._event.keyup) {\n            this._event.keyup();\n        }\n    };\n    LightboxComponent.prototype._keyboardAction = function ($event) {\n        var KEYCODE_ESC = 27;\n        var KEYCODE_LEFTARROW = 37;\n        var KEYCODE_RIGHTARROW = 39;\n        var keycode = $event.keyCode;\n        var key = String.fromCharCode(keycode).toLowerCase();\n        if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {\n            this._lightboxEvent.broadcastLightboxEvent({ id: lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE, data: null });\n        }\n        else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {\n            if (this.currentImageIndex !== 0) {\n                this._changeImage(this.currentImageIndex - 1);\n            }\n            else if (this.options.wrapAround && this.album.length > 1) {\n                this._changeImage(this.album.length - 1);\n            }\n        }\n        else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {\n            if (this.currentImageIndex !== this.album.length - 1) {\n                this._changeImage(this.currentImageIndex + 1);\n            }\n            else if (this.options.wrapAround && this.album.length > 1) {\n                this._changeImage(0);\n            }\n        }\n    };\n    LightboxComponent.prototype._getCssStyleValue = function (elem, propertyName) {\n        return parseFloat(this._windowRef\n            .getComputedStyle(elem.nativeElement, null)\n            .getPropertyValue(propertyName));\n    };\n    LightboxComponent.prototype._onReceivedEvent = function (event) {\n        switch (event.id) {\n            case lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE:\n                this._end();\n                break;\n            default:\n                break;\n        }\n    };\n    return LightboxComponent;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], LightboxComponent.prototype, \"album\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Number)\n], LightboxComponent.prototype, \"currentImageIndex\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], LightboxComponent.prototype, \"options\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], LightboxComponent.prototype, \"cmpRef\", void 0);\n__decorate([\n    core_1.ViewChild('outerContainer'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_outerContainerElem\", void 0);\n__decorate([\n    core_1.ViewChild('container'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_containerElem\", void 0);\n__decorate([\n    core_1.ViewChild('leftArrow'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_leftArrowElem\", void 0);\n__decorate([\n    core_1.ViewChild('rightArrow'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_rightArrowElem\", void 0);\n__decorate([\n    core_1.ViewChild('navArrow'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_navArrowElem\", void 0);\n__decorate([\n    core_1.ViewChild('dataContainer'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_dataContainerElem\", void 0);\n__decorate([\n    core_1.ViewChild('image'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_imageElem\", void 0);\n__decorate([\n    core_1.ViewChild('caption'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_captionElem\", void 0);\n__decorate([\n    core_1.ViewChild('number'),\n    __metadata(\"design:type\", core_1.ElementRef)\n], LightboxComponent.prototype, \"_numberElem\", void 0);\nLightboxComponent = __decorate([\n    core_1.Component({\n        template: \"\\n    <div class=\\\"lb-outerContainer transition\\\" #outerContainer>\\n      <div class=\\\"lb-container\\\" #container>\\n        <img class=\\\"lb-image\\\" [src]=\\\"album[currentImageIndex].src\\\" class=\\\"lb-image animation fadeIn\\\" [hidden]=\\\"ui.showReloader\\\" #image>\\n        <div class=\\\"lb-nav\\\" [hidden]=\\\"!ui.showArrowNav\\\" #navArrow>\\n          <a class=\\\"lb-prev\\\" [hidden]=\\\"!ui.showLeftArrow\\\" (click)=\\\"prevImage()\\\" #leftArrow></a>\\n          <a class=\\\"lb-next\\\"[hidden]=\\\"!ui.showRightArrow\\\" (click)=\\\"nextImage()\\\" #rightArrow></a>\\n        </div>\\n        <div class=\\\"lb-loader\\\" [hidden]=\\\"!ui.showReloader\\\" (click)=\\\"close($event)\\\">\\n          <a class=\\\"lb-cancel\\\"></a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"lb-dataContainer\\\" [hidden]=\\\"ui.showReloader\\\" #dataContainer>\\n      <div class=\\\"lb-data\\\">\\n        <div class=\\\"lb-details\\\">\\n          <span class=\\\"lb-caption animation fadeIn\\\" [hidden]=\\\"!ui.showCaption\\\" [innerHtml]=\\\"album[currentImageIndex].caption\\\" #caption>\\n          </span>\\n          <span class=\\\"lb-number animation fadeIn\\\" [hidden]=\\\"!ui.showPageNumber\\\" #number>{{ content.pageNumber }}</span>\\n        </div>\\n        <div class=\\\"lb-closeContainer\\\">\\n          <a class=\\\"lb-close\\\" (click)=\\\"close($event)\\\"></a>\\n        </div>\\n      </div>\\n    </div>\",\n        selector: '[lb-content]',\n        host: {\n            '(click)': 'close($event)',\n            '[class]': 'ui.classList'\n        }\n    }),\n    __param(6, core_1.Inject(platform_browser_1.DOCUMENT))\n], LightboxComponent);\nexports.LightboxComponent = LightboxComponent;\n",null]}