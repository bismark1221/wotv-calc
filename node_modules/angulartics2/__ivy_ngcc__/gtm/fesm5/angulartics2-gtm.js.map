{"version":3,"file":"angulartics2-gtm.js","sources":["ng:/angulartics2/gtm/gtm.ts","ng:/angulartics2/gtm/angulartics2-gtm.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2, GoogleTagManagerSettings } from 'angulartics2';\n\ndeclare var dataLayer: any;\n\nexport class GoogleTagManagerDefaults implements GoogleTagManagerSettings {\n  userId = null;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2GoogleTagManager {\n\n  constructor(\n    protected angulartics2: Angulartics2,\n  ) {\n    // The dataLayer needs to be initialized\n    if (typeof dataLayer !== 'undefined' && dataLayer) {\n      dataLayer = (window as any).dataLayer = (window as any).dataLayer || [];\n    }\n    const defaults = new GoogleTagManagerDefaults();\n    // Set the default settings for this module\n    this.angulartics2.settings.gtm = { ...defaults, ...this.angulartics2.settings.gtm };\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n  }\n\n  startTracking() {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.exceptionTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.exceptionTrack(x));\n  }\n\n  pageTrack(path: string) {\n    this.pushLayer({\n      event: 'Page View',\n      'content-name': path,\n      userId: this.angulartics2.settings.gtm.userId\n    });\n  }\n\n  /**\n   * Send Data Layer\n   *\n   * @layer data layer object\n   */\n  pushLayer(layer: any) {\n    if (typeof dataLayer !== 'undefined' && dataLayer) {\n      dataLayer.push(layer);\n    }\n  }\n\n  /**\n   * Send interactions to the dataLayer, i.e. for event tracking in Google Analytics\n   *\n   * @param action associated with the event\n   */\n  eventTrack(action: string, properties: any) {\n    // TODO: make interface\n    //  @param {string} properties.category\n    //  @param {string} [properties.label]\n    //  @param {number} [properties.value]\n    //  @param {boolean} [properties.noninteraction]\n    // Set a default GTM category\n    properties = properties || {};\n\n    this.pushLayer({\n      event: properties.event || 'interaction',\n      target: properties.category || 'Event',\n      action,\n      label: properties.label,\n      value: properties.value,\n      interactionType: properties.noninteraction,\n      userId: this.angulartics2.settings.gtm.userId,\n      ...properties.gtmCustom\n    });\n  }\n\n  /**\n   * Exception Track Event in GTM\n   *\n   */\n  exceptionTrack(properties: any) {\n    // TODO: make interface\n    //  @param {Object} properties\n    //  @param {string} properties.appId\n    //  @param {string} properties.appName\n    //  @param {string} properties.appVersion\n    //  @param {string} [properties.description]\n    //  @param {boolean} [properties.fatal]\n    if (! properties || ! properties.appId || ! properties.appName || ! properties.appVersion) {\n      console.error('Must be setted appId, appName and appVersion.');\n      return;\n    }\n\n    if (properties.fatal === undefined) {\n      console.log('No \"fatal\" provided, sending with fatal=true');\n      properties.exFatal = true;\n    }\n\n    properties.exDescription = properties.event ? properties.event.stack : properties.description;\n\n    this.eventTrack(`Exception thrown for ${properties.appName} <${properties.appId}@${properties.appVersion}>`, {\n      category: 'Exception',\n      label: properties.exDescription,\n    });\n  }\n\n  /**\n   * Set userId for use with Universal Analytics User ID feature\n   *\n   * @param userId used to identify user cross-device in Google Analytics\n   */\n  setUsername(userId: string) {\n    this.angulartics2.settings.gtm.userId = userId;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './gtm';\n"]}