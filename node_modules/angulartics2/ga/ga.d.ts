import { Angulartics2, GoogleAnalyticsSettings, UserTimings } from 'angulartics2';
import * as ɵngcc0 from '@angular/core';
export declare class GoogleAnalyticsDefaults implements GoogleAnalyticsSettings {
    additionalAccountNames: any[];
    userId: any;
    transport: string;
    anonymizeIp: boolean;
}
export declare class Angulartics2GoogleAnalytics {
    private angulartics2;
    dimensionsAndMetrics: any[];
    settings: Partial<GoogleAnalyticsSettings>;
    constructor(angulartics2: Angulartics2);
    startTracking(): void;
    pageTrack(path: string): void;
    /**
     * Track Event in GA
     *
     * @param action Associated with the event
     * @param properties Comprised of:
     *  - category (string) and optional
     *  - label (string)
     *  - value (integer)
     *  - noninteraction (boolean)
     *
     * @link https://developers.google.com/analytics/devguides/collection/gajs/eventTrackerGuide#SettingUpEventTracking
     * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/events
     */
    eventTrack(action: string, properties: any): void;
    /**
     * Exception Track Event in GA
     *
     * @param properties Comprised of the optional fields:
     *  - fatal (string)
     *  - description (string)
     *
     * @https://developers.google.com/analytics/devguides/collection/analyticsjs/exceptions
     *
     * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/events
     */
    exceptionTrack(properties: any): void;
    /**
     * User Timings Event in GA
     *
     * @param properties Comprised of the mandatory fields:
     *  - timingCategory (string)
     *  - timingVar (string)
     *  - timingValue (number)
     * Properties can also have the optional fields:
     *  - timingLabel (string)
     *
     * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings
     */
    userTimings(properties: UserTimings): void;
    setUsername(userId: string): void;
    setUserProperties(properties: any): void;
    private setDimensionsAndMetrics;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Angulartics2GoogleAnalytics, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2EuZC50cyIsInNvdXJjZXMiOlsiZ2EuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFuZ3VsYXJ0aWNzMiwgR29vZ2xlQW5hbHl0aWNzU2V0dGluZ3MsIFVzZXJUaW1pbmdzIH0gZnJvbSAnYW5ndWxhcnRpY3MyJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdvb2dsZUFuYWx5dGljc0RlZmF1bHRzIGltcGxlbWVudHMgR29vZ2xlQW5hbHl0aWNzU2V0dGluZ3Mge1xuICAgIGFkZGl0aW9uYWxBY2NvdW50TmFtZXM6IGFueVtdO1xuICAgIHVzZXJJZDogYW55O1xuICAgIHRyYW5zcG9ydDogc3RyaW5nO1xuICAgIGFub255bWl6ZUlwOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW5ndWxhcnRpY3MyR29vZ2xlQW5hbHl0aWNzIHtcbiAgICBwcml2YXRlIGFuZ3VsYXJ0aWNzMjtcbiAgICBkaW1lbnNpb25zQW5kTWV0cmljczogYW55W107XG4gICAgc2V0dGluZ3M6IFBhcnRpYWw8R29vZ2xlQW5hbHl0aWNzU2V0dGluZ3M+O1xuICAgIGNvbnN0cnVjdG9yKGFuZ3VsYXJ0aWNzMjogQW5ndWxhcnRpY3MyKTtcbiAgICBzdGFydFRyYWNraW5nKCk6IHZvaWQ7XG4gICAgcGFnZVRyYWNrKHBhdGg6IHN0cmluZyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogVHJhY2sgRXZlbnQgaW4gR0FcbiAgICAgKlxuICAgICAqIEBwYXJhbSBhY3Rpb24gQXNzb2NpYXRlZCB3aXRoIHRoZSBldmVudFxuICAgICAqIEBwYXJhbSBwcm9wZXJ0aWVzIENvbXByaXNlZCBvZjpcbiAgICAgKiAgLSBjYXRlZ29yeSAoc3RyaW5nKSBhbmQgb3B0aW9uYWxcbiAgICAgKiAgLSBsYWJlbCAoc3RyaW5nKVxuICAgICAqICAtIHZhbHVlIChpbnRlZ2VyKVxuICAgICAqICAtIG5vbmludGVyYWN0aW9uIChib29sZWFuKVxuICAgICAqXG4gICAgICogQGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYW5hbHl0aWNzL2Rldmd1aWRlcy9jb2xsZWN0aW9uL2dhanMvZXZlbnRUcmFja2VyR3VpZGUjU2V0dGluZ1VwRXZlbnRUcmFja2luZ1xuICAgICAqIEBsaW5rIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5dGljcy9kZXZndWlkZXMvY29sbGVjdGlvbi9hbmFseXRpY3Nqcy9ldmVudHNcbiAgICAgKi9cbiAgICBldmVudFRyYWNrKGFjdGlvbjogc3RyaW5nLCBwcm9wZXJ0aWVzOiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEV4Y2VwdGlvbiBUcmFjayBFdmVudCBpbiBHQVxuICAgICAqXG4gICAgICogQHBhcmFtIHByb3BlcnRpZXMgQ29tcHJpc2VkIG9mIHRoZSBvcHRpb25hbCBmaWVsZHM6XG4gICAgICogIC0gZmF0YWwgKHN0cmluZylcbiAgICAgKiAgLSBkZXNjcmlwdGlvbiAoc3RyaW5nKVxuICAgICAqXG4gICAgICogQGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5dGljcy9kZXZndWlkZXMvY29sbGVjdGlvbi9hbmFseXRpY3Nqcy9leGNlcHRpb25zXG4gICAgICpcbiAgICAgKiBAbGluayBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9hbmFseXRpY3MvZGV2Z3VpZGVzL2NvbGxlY3Rpb24vYW5hbHl0aWNzanMvZXZlbnRzXG4gICAgICovXG4gICAgZXhjZXB0aW9uVHJhY2socHJvcGVydGllczogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBVc2VyIFRpbWluZ3MgRXZlbnQgaW4gR0FcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwcm9wZXJ0aWVzIENvbXByaXNlZCBvZiB0aGUgbWFuZGF0b3J5IGZpZWxkczpcbiAgICAgKiAgLSB0aW1pbmdDYXRlZ29yeSAoc3RyaW5nKVxuICAgICAqICAtIHRpbWluZ1ZhciAoc3RyaW5nKVxuICAgICAqICAtIHRpbWluZ1ZhbHVlIChudW1iZXIpXG4gICAgICogUHJvcGVydGllcyBjYW4gYWxzbyBoYXZlIHRoZSBvcHRpb25hbCBmaWVsZHM6XG4gICAgICogIC0gdGltaW5nTGFiZWwgKHN0cmluZylcbiAgICAgKlxuICAgICAqIEBsaW5rIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5dGljcy9kZXZndWlkZXMvY29sbGVjdGlvbi9hbmFseXRpY3Nqcy91c2VyLXRpbWluZ3NcbiAgICAgKi9cbiAgICB1c2VyVGltaW5ncyhwcm9wZXJ0aWVzOiBVc2VyVGltaW5ncyk6IHZvaWQ7XG4gICAgc2V0VXNlcm5hbWUodXNlcklkOiBzdHJpbmcpOiB2b2lkO1xuICAgIHNldFVzZXJQcm9wZXJ0aWVzKHByb3BlcnRpZXM6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBzZXREaW1lbnNpb25zQW5kTWV0cmljcztcbn1cbiJdfQ==