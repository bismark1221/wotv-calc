{"version":3,"sources":["angular2-prettyjson.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","angular2Pretyjson","core","this","serializer","stack","keys","cycleReplacer","key","value","slice","indexOf","join","length","thisPos","splice","push","Infinity","call","PrettyJsonComponent","decorators","type","Component","args","selector","styles","template","ctorParameters","propDecorators","obj","Input","PrettyJsonPipe","prototype","transform","spaces","_syntaxHighlight","json","serializer$$1","spacing","undefined","JSON","stringify","replace","match","cls","test","Pipe","name","pure","SafeJsonPipe","PrettyJsonModule","NgModule","declarations","ɵc","ɵa","ɵb","Object","defineProperty"],"mappings":"CAAC,SAAUA,OAAQC,SACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,QAAQC,QAASE,QAAQ,kBACtE,mBAAXC,QAAyBA,OAAOC,IAAMD,QAAQ,UAAW,iBAAkBJ,SACjFA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,sBAAwBR,OAAOO,GAAGE,MAHpF,CAIEC,KAAM,SAAWR,QAAQO,MAAQ,aAsCnC,SAASE,aACL,IAAqBC,SACAC,QACAC,cAAgB,SAAUC,IAAKC,OAChD,OAAIJ,MAAM,KAAOI,MACN,eAEJ,eAAiBH,KAAKI,MAAM,EAAGL,MAAMM,QAAQF,QAAQG,KAAK,KAAO,KAE5E,OAAO,SAAUJ,IAAKC,OAClB,GAAIJ,MAAMQ,OAAS,EAAG,CAClB,IAAqBC,QAAUT,MAAMM,QAAQR,OAC5CW,QAAUT,MAAMU,OAAOD,QAAU,GAAKT,MAAMW,KAAKb,OACjDW,QAAUR,KAAKS,OAAOD,QAASG,EAAAA,EAAUT,KAAOF,KAAKU,KAAKR,MACtDH,MAAMM,QAAQF,SACfA,MAAQF,cAAcW,KAAKf,KAAMK,IAAKC,aAI1CJ,MAAMW,KAAKP,OAEf,OAAOA;;;;AAhDf,IAAIU,oBAAuB,WACvB,SAASA,uBAgBT,OAdAA,oBAAoBC,aACdC,KAAMnB,KAAKoB,UAAWC,OACZC,SAAU,aACVC,QACI,sTAEJC,SAAU,iEAI1BP,oBAAoBQ,eAAiB,WAAc,UACnDR,oBAAoBS,gBAChBC,MAAUR,KAAMnB,KAAK4B,SAElBX,oBAjBe,GAwDtBY,eAAkB,WAClB,SAASA,kBAiET,OA1DAA,eAAeC,UAAUC,UAKzB,SAAUJ,IAAKK,QAEX,YADe,IAAXA,SAAqBA,OAAS,GAC3B/B,KAAKgC,iBAAiBN,IAAKzB,aAAc8B,SAQpDH,eAAeC,UAAUG,iBAMzB,SAAUC,KAAMC,cAAeC,SAC3B,YAAaC,IAATH,KACO,mCAIS,iBAATA,OACPA,KAAOI,KAAKC,UAAUL,KAAMC,cAAeC,WAE/CF,KAAOA,KAAKM,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,SAC3DA,QAAQ,yGAA0G,SAAUC,OACpI,IAAqBC,IAAM,SAe3B,MAdI,KAAKC,KAAKF,OAENC,IADA,KAAKC,KAAKF,OACJ,MAGA,SAGL,aAAaE,KAAKF,OACvBC,IAAM,UAED,OAAOC,KAAKF,SACjBC,IAAM,QAEH,gBAAmBA,IAAM,KAAQD,MAAQ,cAGxDZ,eAAeX,aACTC,KAAMnB,KAAK4C,KAAMvB,OACPwB,KAAM,aACNC,MAAM,MAItBjB,eAAeJ,eAAiB,WAAc,UACvCI,eAlEU,GAyEjBkB,aAAgB,WAChB,SAASA,gBAwBT,OAjBAA,aAAajB,UAAUC,UAKvB,SAAUJ,IAAKK,QAEX,YADe,IAAXA,SAAqBA,OAAS,GAC3BM,KAAKC,UAAUZ,IAAKzB,aAAc8B,SAE7Ce,aAAa7B,aACPC,KAAMnB,KAAK4C,KAAMvB,OACPwB,KAAM,OACNC,MAAM,MAItBC,aAAatB,eAAiB,WAAc,UACrCsB,aAzBQ,GAgCfC,iBAAoB,WACpB,SAASA,oBAkBT,OAhBAA,iBAAiB9B,aACXC,KAAMnB,KAAKiD,SAAU5B,OACX6B,cACIjC,oBACAY,eACAkB,cAEJtD,SACIwB,oBACAY,eACAkB,kBAKpBC,iBAAiBvB,eAAiB,WAAc,UACzCuB,iBAnBY,GAsBvBvD,QAAQuD,iBAAmBA,iBAC3BvD,QAAQ0D,GAAKJ,aACbtD,QAAQ2D,GAAKnC,oBACbxB,QAAQ4D,GAAKxB,eAEbyB,OAAOC,eAAe9D,QAAS,cAAgBc,OAAO","file":"angular2-prettyjson.umd.min.js.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.angular2Pretyjson = {}),global.ng.core));\n}(this, (function (exports,core) { 'use strict';\n\n/**\n * @license angular2-prettyjson\n * MIT license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PrettyJsonComponent = (function () {\n    function PrettyJsonComponent() {\n    }\n    PrettyJsonComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: \"prettyjson\",\n                    styles: [\n                        \"pre {outline: 1px solid #ccc; padding: 5px; margin: 5px; }\\n    :host >>> span {white-space: normal;}\\n    :host >>> .string { color: green; }\\n    :host >>> .number { color: darkorange; }\\n    :host >>> .boolean { color: blue; }\\n    :host >>> .null { color: magenta; }\\n    :host >>> .key { color: red; }\"\n                    ],\n                    template: \"\\n    <pre [innerHtml]=\\\"obj | prettyjson\\\">\\n    </pre>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    PrettyJsonComponent.ctorParameters = function () { return []; };\n    PrettyJsonComponent.propDecorators = {\n        \"obj\": [{ type: core.Input },],\n    };\n    return PrettyJsonComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction serializer() {\n    var /** @type {?} */ stack = [];\n    var /** @type {?} */ keys = [];\n    var /** @type {?} */ cycleReplacer = function (key, value) {\n        if (stack[0] === value) {\n            return \"[Circular ~]\";\n        }\n        return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\n    };\n    return function (key, value) {\n        if (stack.length > 0) {\n            var /** @type {?} */ thisPos = stack.indexOf(this);\n            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n            if (~stack.indexOf(value)) {\n                value = cycleReplacer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n        return value;\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PrettyJsonPipe = (function () {\n    function PrettyJsonPipe() {\n    }\n    /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n    PrettyJsonPipe.prototype.transform = /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n    function (obj, spaces) {\n        if (spaces === void 0) { spaces = 2; }\n        return this._syntaxHighlight(obj, serializer(), spaces);\n    };\n    /**\n     * @param {?} json\n     * @param {?} serializer\n     * @param {?} spacing\n     * @return {?}\n     */\n    PrettyJsonPipe.prototype._syntaxHighlight = /**\n     * @param {?} json\n     * @param {?} serializer\n     * @param {?} spacing\n     * @return {?}\n     */\n    function (json, serializer$$1, spacing) {\n        if (json === undefined) {\n            return '<span class=\"undefined\"></span>';\n        }\n        // Credits to the accepted answer here\n        // http://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript\n        if (typeof json !== \"string\") {\n            json = JSON.stringify(json, serializer$$1, spacing);\n        }\n        json = json.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n            var /** @type {?} */ cls = \"number\";\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = \"key\";\n                }\n                else {\n                    cls = \"string\";\n                }\n            }\n            else if (/true|false/.test(match)) {\n                cls = \"boolean\";\n            }\n            else if (/null/.test(match)) {\n                cls = \"null\";\n            }\n            return \"<span class=\\\"\" + cls + \"\\\">\" + match + \"</span>\";\n        });\n    };\n    PrettyJsonPipe.decorators = [\n        { type: core.Pipe, args: [{\n                    name: \"prettyjson\",\n                    pure: false\n                },] },\n    ];\n    /** @nocollapse */\n    PrettyJsonPipe.ctorParameters = function () { return []; };\n    return PrettyJsonPipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SafeJsonPipe = (function () {\n    function SafeJsonPipe() {\n    }\n    /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n    SafeJsonPipe.prototype.transform = /**\n     * @param {?} obj\n     * @param {?=} spaces\n     * @return {?}\n     */\n    function (obj, spaces) {\n        if (spaces === void 0) { spaces = 2; }\n        return JSON.stringify(obj, serializer(), spaces);\n    };\n    SafeJsonPipe.decorators = [\n        { type: core.Pipe, args: [{\n                    name: \"json\",\n                    pure: false\n                },] },\n    ];\n    /** @nocollapse */\n    SafeJsonPipe.ctorParameters = function () { return []; };\n    return SafeJsonPipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PrettyJsonModule = (function () {\n    function PrettyJsonModule() {\n    }\n    PrettyJsonModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: [\n                        PrettyJsonComponent,\n                        PrettyJsonPipe,\n                        SafeJsonPipe\n                    ],\n                    exports: [\n                        PrettyJsonComponent,\n                        PrettyJsonPipe,\n                        SafeJsonPipe\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    PrettyJsonModule.ctorParameters = function () { return []; };\n    return PrettyJsonModule;\n}());\n\nexports.PrettyJsonModule = PrettyJsonModule;\nexports.ɵc = SafeJsonPipe;\nexports.ɵa = PrettyJsonComponent;\nexports.ɵb = PrettyJsonPipe;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=angular2-prettyjson.umd.js.map\n"]}