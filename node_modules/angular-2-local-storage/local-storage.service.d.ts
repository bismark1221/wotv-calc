import { Observable } from 'rxjs';
import { ILocalStorageEvent } from './local-storage-events.interface';
import { ILocalStorageServiceConfig } from './local-storage.config.interface';
import * as ɵngcc0 from '@angular/core';
export declare class LocalStorageService {
    isSupported: boolean;
    errors$: Observable<string>;
    removeItems$: Observable<ILocalStorageEvent>;
    setItems$: Observable<ILocalStorageEvent>;
    warnings$: Observable<string>;
    private notifyOptions;
    private prefix;
    private storageType;
    private webStorage;
    private errors;
    private removeItems;
    private setItems;
    private warnings;
    constructor(config?: ILocalStorageServiceConfig);
    add(key: string, value: any): boolean;
    clearAll(regularExpression?: string): boolean;
    deriveKey(key: string): string;
    get<T>(key: string): T;
    getStorageType(): string;
    keys(): Array<string>;
    length(): number;
    remove(...keys: Array<string>): boolean;
    set(key: string, value: any): boolean;
    private checkSupport;
    private setPrefix;
    private setStorageType;
    private setNotify;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LocalStorageService, [{ optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<LocalStorageService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImxvY2FsLXN0b3JhZ2Uuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBJTG9jYWxTdG9yYWdlRXZlbnQgfSBmcm9tICcuL2xvY2FsLXN0b3JhZ2UtZXZlbnRzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBJTG9jYWxTdG9yYWdlU2VydmljZUNvbmZpZyB9IGZyb20gJy4vbG9jYWwtc3RvcmFnZS5jb25maWcuaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExvY2FsU3RvcmFnZVNlcnZpY2Uge1xuICAgIGlzU3VwcG9ydGVkOiBib29sZWFuO1xuICAgIGVycm9ycyQ6IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICByZW1vdmVJdGVtcyQ6IE9ic2VydmFibGU8SUxvY2FsU3RvcmFnZUV2ZW50PjtcbiAgICBzZXRJdGVtcyQ6IE9ic2VydmFibGU8SUxvY2FsU3RvcmFnZUV2ZW50PjtcbiAgICB3YXJuaW5ncyQ6IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICBwcml2YXRlIG5vdGlmeU9wdGlvbnM7XG4gICAgcHJpdmF0ZSBwcmVmaXg7XG4gICAgcHJpdmF0ZSBzdG9yYWdlVHlwZTtcbiAgICBwcml2YXRlIHdlYlN0b3JhZ2U7XG4gICAgcHJpdmF0ZSBlcnJvcnM7XG4gICAgcHJpdmF0ZSByZW1vdmVJdGVtcztcbiAgICBwcml2YXRlIHNldEl0ZW1zO1xuICAgIHByaXZhdGUgd2FybmluZ3M7XG4gICAgY29uc3RydWN0b3IoY29uZmlnPzogSUxvY2FsU3RvcmFnZVNlcnZpY2VDb25maWcpO1xuICAgIGFkZChrZXk6IHN0cmluZywgdmFsdWU6IGFueSk6IGJvb2xlYW47XG4gICAgY2xlYXJBbGwocmVndWxhckV4cHJlc3Npb24/OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGRlcml2ZUtleShrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICBnZXQ8VD4oa2V5OiBzdHJpbmcpOiBUO1xuICAgIGdldFN0b3JhZ2VUeXBlKCk6IHN0cmluZztcbiAgICBrZXlzKCk6IEFycmF5PHN0cmluZz47XG4gICAgbGVuZ3RoKCk6IG51bWJlcjtcbiAgICByZW1vdmUoLi4ua2V5czogQXJyYXk8c3RyaW5nPik6IGJvb2xlYW47XG4gICAgc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGNoZWNrU3VwcG9ydDtcbiAgICBwcml2YXRlIHNldFByZWZpeDtcbiAgICBwcml2YXRlIHNldFN0b3JhZ2VUeXBlO1xuICAgIHByaXZhdGUgc2V0Tm90aWZ5O1xufVxuIl19