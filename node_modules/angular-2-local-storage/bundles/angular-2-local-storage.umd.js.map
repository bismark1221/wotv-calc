{"version":3,"file":"angular-2-local-storage.umd.js.map","sources":["ng://angular-2-local-storage/local-storage.config.interface.ts","ng://angular-2-local-storage/local-storage.module.ts","ng://angular-2-local-storage/local-storage.service.ts"],"sourcesContent":["import { INotifyOptions } from './notify-options.interface';\nimport { InjectionToken } from '@angular/core';\n\nexport const LOCAL_STORAGE_SERVICE_CONFIG = new InjectionToken<string>('LOCAL_STORAGE_SERVICE_CONFIG');\n\nexport interface ILocalStorageServiceConfig {\n    // Properties:\n    notifyOptions?: INotifyOptions;\n    prefix?: string;\n    storageType?: 'sessionStorage' | 'localStorage';\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ILocalStorageServiceConfig, LOCAL_STORAGE_SERVICE_CONFIG } from './local-storage.config.interface';\n\n@NgModule()\nexport class LocalStorageModule {\n    static forRoot (userConfig: ILocalStorageServiceConfig = {}): ModuleWithProviders {\n        return {\n            ngModule: LocalStorageModule,\n            providers: [\n                { provide: LOCAL_STORAGE_SERVICE_CONFIG, useValue: userConfig }\n            ]\n        }\n    }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable, Subscriber } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { ILocalStorageEvent } from './local-storage-events.interface';\nimport { INotifyOptions } from './notify-options.interface';\nimport { ILocalStorageServiceConfig, LOCAL_STORAGE_SERVICE_CONFIG } from './local-storage.config.interface';\n\nconst DEPRECATED: string = 'This function is deprecated.';\nconst LOCAL_STORAGE_NOT_SUPPORTED: string = 'LOCAL_STORAGE_NOT_SUPPORTED';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n    public isSupported: boolean = false;\n\n    public errors$: Observable<string>;\n    public removeItems$: Observable<ILocalStorageEvent>;\n    public setItems$: Observable<ILocalStorageEvent>;\n    public warnings$: Observable<string>;\n\n    private notifyOptions: INotifyOptions = {\n        setItem: false,\n        removeItem: false\n    };\n    private prefix: string = 'ls';\n    private storageType: 'sessionStorage' | 'localStorage' = 'localStorage';\n    private webStorage: Storage;\n\n    private errors: Subscriber<string> = new Subscriber<string>();\n    private removeItems: Subscriber<ILocalStorageEvent> = new Subscriber<ILocalStorageEvent>() ;\n    private setItems: Subscriber<ILocalStorageEvent> = new Subscriber<ILocalStorageEvent>();\n    private warnings: Subscriber<string> = new Subscriber<string>();\n\n    constructor (\n        @Optional() @Inject(LOCAL_STORAGE_SERVICE_CONFIG) config: ILocalStorageServiceConfig = {}\n    ) {\n        let { notifyOptions, prefix, storageType } = config;\n\n        if (notifyOptions != null) {\n            let { setItem, removeItem } = notifyOptions;\n            this.setNotify(!!setItem, !!removeItem);\n        }\n        if (prefix != null) {\n            this.setPrefix(prefix);\n        }\n        if (storageType != null) {\n            this.setStorageType(storageType);\n        }\n\n        this.errors$ = new Observable<string>((observer: Subscriber<string>) => this.errors = observer).pipe(share());\n        this.removeItems$ = new Observable<ILocalStorageEvent>((observer: Subscriber<ILocalStorageEvent>) => this.removeItems = observer).pipe(share());\n        this.setItems$ = new Observable<ILocalStorageEvent>((observer: Subscriber<ILocalStorageEvent>) => this.setItems = observer).pipe(share());\n        this.warnings$ = new Observable<string>((observer: Subscriber<string>) => this.warnings = observer).pipe(share());\n\n        this.isSupported = this.checkSupport();\n    }\n\n    public add (key: string, value: any): boolean {\n        if (console && console.warn) {\n            console.warn(DEPRECATED);\n            console.warn('Use `LocalStorageService.set` instead.');\n        }\n\n        return this.set(key, value);\n    }\n\n    public clearAll (regularExpression?: string): boolean {\n        // Setting both regular expressions independently\n        // Empty strings result in catchall RegExp\n        let prefixRegex = !!this.prefix ? new RegExp('^' + this.prefix) : new RegExp('');\n        let testRegex = !!regularExpression ? new RegExp(regularExpression) : new RegExp('');\n\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return false;\n        }\n\n        let prefixLength = this.prefix.length;\n\n        for (let key in this.webStorage) {\n            // Only remove items that are for this app and match the regular expression\n            if (prefixRegex.test(key) && testRegex.test(key.substr(prefixLength))) {\n                try {\n                    this.remove(key.substr(prefixLength));\n                } catch (e) {\n                    this.errors.next(e.message);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    public deriveKey (key: string): string {\n        return `${this.prefix}${key}`;\n    }\n\n    public get <T> (key: string): T {\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return null;\n        }\n\n        let item = this.webStorage ? this.webStorage.getItem(this.deriveKey(key)) : null;\n        // FIXME: not a perfect solution, since a valid 'null' string can't be stored\n        if (!item || item === 'null') {\n            return null;\n        }\n\n        try {\n            return JSON.parse(item);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    public getStorageType (): string {\n        return this.storageType;\n    }\n\n    public keys (): Array<string> {\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return [];\n        }\n\n        let prefixLength = this.prefix.length;\n        let keys: Array<string> = [];\n        for (let key in this.webStorage) {\n            // Only return keys that are for this app\n            if (key.substr(0, prefixLength) === this.prefix) {\n                try {\n                    keys.push(key.substr(prefixLength));\n                } catch (e) {\n                    this.errors.next(e.message);\n                    return [];\n                }\n            }\n        }\n        return keys;\n    }\n\n    public length (): number {\n        let count = 0;\n        let storage = this.webStorage;\n        for(let i = 0; i < storage.length; i++) {\n            if (storage.key(i).indexOf(this.prefix) === 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    public remove (...keys: Array<string>): boolean {\n        let result = true;\n        keys.forEach((key: string) => {\n            if (!this.isSupported) {\n                this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n                result = false;\n            }\n\n            try {\n                this.webStorage.removeItem(this.deriveKey(key));\n                if (this.notifyOptions.removeItem) {\n                    this.removeItems.next({\n                        key: key,\n                        storageType: this.storageType\n                    });\n                }\n            } catch (e) {\n                this.errors.next(e.message);\n                result = false;\n            }\n        });\n        return result;\n    }\n\n    public set (key: string, value: any): boolean {\n        // Let's convert `undefined` values to `null` to get the value consistent\n        if (value === undefined) {\n            value = null;\n        } else {\n            value = JSON.stringify(value);\n        }\n\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return false;\n        }\n\n        try {\n            if (this.webStorage) {\n                this.webStorage.setItem(this.deriveKey(key), value);\n            }\n            if (this.notifyOptions.setItem) {\n                this.setItems.next({\n                    key: key,\n                    newvalue: value,\n                    storageType: this.storageType\n                });\n            }\n        } catch (e) {\n            this.errors.next(e.message);\n            return false;\n        }\n        return true;\n    }\n\n    private checkSupport (): boolean {\n        try {\n            let supported = this.storageType in window\n                          && window[this.storageType] !== null;\n\n            if (supported) {\n                this.webStorage = window[this.storageType];\n\n                // When Safari (OS X or iOS) is in private browsing mode, it\n                // appears as though localStorage is available, but trying to\n                // call .setItem throws an exception.\n                //\n                // \"QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made\n                // to add something to storage that exceeded the quota.\"\n                let key = this.deriveKey(`__${Math.round(Math.random() * 1e7)}`);\n                this.webStorage.setItem(key, '');\n                this.webStorage.removeItem(key);\n            }\n\n            return supported;\n        } catch (e) {\n            this.errors.next(e.message);\n            return false;\n        }\n    }\n\n    private setPrefix (prefix: string): void {\n        this.prefix = prefix;\n\n        // If there is a prefix set in the config let's use that with an appended\n        // period for readability:\n        const PERIOD: string = '.';\n        if (this.prefix && !this.prefix.endsWith(PERIOD)) {\n            this.prefix = !!this.prefix ? `${this.prefix}${PERIOD}` : '';\n        }\n    }\n\n    private setStorageType (storageType: 'sessionStorage' | 'localStorage'): void {\n        this.storageType = storageType;\n    }\n\n    private setNotify (setItem: boolean, removeItem: boolean): void {\n        if (setItem != null) {\n            this.notifyOptions.setItem = setItem;\n        }\n        if (removeItem != null) {\n            this.notifyOptions.removeItem = removeItem;\n        }\n    }\n}\n"],"names":["InjectionToken","NgModule","Subscriber","Observable","share","Injectable","Optional","Inject"],"mappings":"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"}
